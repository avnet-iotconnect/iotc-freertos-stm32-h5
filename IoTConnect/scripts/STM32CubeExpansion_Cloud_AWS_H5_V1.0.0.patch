diff --git a/Drivers/BSP/STM32H573I-DK/stm32h573i_discovery_conf.h b/Drivers/BSP/STM32H573I-DK/stm32h573i_discovery_conf.h
new file mode 100644
index 0000000..8c0b97c
--- /dev/null
+++ b/Drivers/BSP/STM32H573I-DK/stm32h573i_discovery_conf.h
@@ -0,0 +1,99 @@
+/**
+  ******************************************************************************
+  * @file    stm32h573i_discovery_conf_template.h
+  * @author  MCD Application Team
+  * @brief   configuration file.
+  *          This file should be copied to the application folder and renamed
+  *          to stm32h573i_discovery_conf.h
+  ******************************************************************************
+  * @attention
+  *
+  * Copyright (c) 2023 STMicroelectronics.
+  * All rights reserved.
+  *
+  * This software is licensed under terms that can be found in the LICENSE file
+  * in the root directory of this software component.
+  * If no LICENSE file comes with this software, it is provided AS-IS.
+  *
+  ******************************************************************************
+  */
+
+/* Define to prevent recursive inclusion -------------------------------------*/
+#ifndef STM32H573I_DK_CONF_H
+#define STM32H573I_DK_CONF_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/* Includes ------------------------------------------------------------------*/
+#include "stm32h5xx_hal.h"
+
+/** @addtogroup BSP
+  * @{
+  */
+
+/** @addtogroup STM32H573I_DK
+  * @{
+  */
+
+/** @defgroup STM32H573I_DK_CONFIG Config
+  * @{
+  */
+
+/** @defgroup STM32H573I_DK_CONFIG_Exported_Constants Exported Constants
+  * @{
+  */
+
+/* COM define */
+#define USE_BSP_COM_FEATURE               1U
+#define USE_COM_LOG                       0U
+
+/* I2C BUS timing define */
+#define I2C_VALID_TIMING_NBR              128U
+
+/* Audio codecs defines */
+#define USE_AUDIO_CODEC_CS42L51           1U
+
+/* TS defines */
+#define USE_TS_GESTURE                    1U
+#define USE_TS_MULTI_TOUCH                1U
+#define TS_TOUCH_NBR                      2U
+
+/* IRQn priorities */
+#define BSP_BUTTON_USER_IT_PRIORITY       15U
+#define BSP_AUDIO_OUT_IT_PRIORITY         14U
+#define BSP_AUDIO_IN_IT_PRIORITY          15U
+#define BSP_SD_IT_PRIORITY                14U
+#define BSP_SD_RX_IT_PRIORITY             14U
+#define BSP_SD_TX_IT_PRIORITY             15U
+#define BSP_TS_IT_PRIORITY                15U
+
+
+/* I2C4 Frequencies in Hz  */
+#define BUS_I2C4_FREQUENCY                100000UL /* Frequency of I2C4 = 100 KHz*/
+
+/* Usage of USBPD PWR TRACE system */
+#define USE_BSP_USBPD_PWR_TRACE           0U /* USBPD BSP trace system is disabled */
+
+/**
+  * @}
+  */
+
+/**
+  * @}
+  */
+
+/**
+  * @}
+  */
+
+/**
+  * @}
+  */
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* STM32H573I_DK_CONF_H */
diff --git a/Middleware/ARM/mbedtls/include/mbedtls/mbedtls_config.h b/Middleware/ARM/mbedtls/include/mbedtls/mbedtls_config.h
index 0558ee0..c441b56 100644
--- a/Middleware/ARM/mbedtls/include/mbedtls/mbedtls_config.h
+++ b/Middleware/ARM/mbedtls/include/mbedtls/mbedtls_config.h
@@ -2112,7 +2112,7 @@
  *
  * Module:  library/chacha20.c
  */
-#define MBEDTLS_CHACHA20_C
+//#define MBEDTLS_CHACHA20_C
 
 /**
  * \def MBEDTLS_CHACHAPOLY_C
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_builtin_composites.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_builtin_composites.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_builtin_composites.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_builtin_composites.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_builtin_primitives.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_builtin_primitives.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_builtin_primitives.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_builtin_primitives.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_compat.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_compat.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_compat.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_compat.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_config.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_config.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_config.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_config.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_driver_common.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_driver_common.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_driver_common.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_driver_common.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_driver_contexts_composites.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_driver_contexts_composites.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_driver_contexts_composites.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_driver_contexts_composites.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_driver_contexts_primitives.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_driver_contexts_primitives.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_driver_contexts_primitives.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_driver_contexts_primitives.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_extra.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_extra.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_extra.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_extra.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_platform.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_platform.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_platform.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_platform.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_se_driver.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_se_driver.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_se_driver.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_se_driver.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_sizes.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_sizes.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_sizes.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_sizes.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_struct.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_struct.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_struct.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_struct.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_types.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_types.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_types.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_types.h
diff --git a/Middleware/ARM/mbedtls/include/psa/crypto_values.h b/Middleware/ARM/mbedtls/include/psa.rm/crypto_values.h
similarity index 100%
rename from Middleware/ARM/mbedtls/include/psa/crypto_values.h
rename to Middleware/ARM/mbedtls/include/psa.rm/crypto_values.h
diff --git a/Projects/Common/app/emu_sensor_publish.c b/Projects/Common/app/emu_sensor_publish.c
index 8640751..0d17cb1 100644
--- a/Projects/Common/app/emu_sensor_publish.c
+++ b/Projects/Common/app/emu_sensor_publish.c
@@ -58,6 +58,10 @@
 /* Telemetry inputs */
 #include "lwip/stats.h"
 
+#include "iotconnect_config.h"
+#include "iotconnect_app.h"
+#include "iotcl_telemetry.h"
+
 #define MQTT_PUBLISH_MAX_LEN                 ( 512 )
 #define MQTT_PUBLISH_TIME_BETWEEN_MS         ( 2000 )
 #define MQTT_PUBLISH_TOPIC                   "net_stats"
@@ -205,8 +209,34 @@ static BaseType_t xUpdateData( NetworkData_t * pxData )
 }
 
 /*-----------------------------------------------------------*/
+#define APP_VERSION 			"00.00.01"		// Version string
+__weak void iotcApp_create_and_send_telemetry_json(
+		const void *pToTelemetryStruct, size_t siz) {
+
+    const NetworkData_t * p = NULL;
+    IotclMessageHandle msg = iotcl_telemetry_create();
+
+    if(siz != sizeof(const NetworkData_t)) {
+        IOTCL_ERROR(siz, "Expected telemetry size does not match");
+        return;
+    }
+
+    p=pToTelemetryStruct;
+
+    // Optional. The first time you create a data poiF\Z\nt, the current timestamp will be automatically added
+    // TelemetryAddWith* calls are only required if sending multiple data points in one packet.
+	// FIXME: new iotc-c-lib has new API for adding timestamps
+	// iotcl_telemetry_add_with_iso_time(msg, NULL);
+
+    iotcl_telemetry_set_number(msg, "timer", (double)p->timer);
+    iotcl_telemetry_set_number(msg, "sent", (double)p->sent);
+    iotcl_telemetry_set_number(msg, "received", (double)p->received);
 
+    iotcl_telemetry_set_string(msg, "version", APP_VERSION);
 
+    iotcl_mqtt_send_telemetry(msg, true);
+    iotcl_telemetry_destroy(msg);
+}
 
 void vSensorPublishTask( void * pvParameters )
 {
@@ -260,21 +290,26 @@ void vSensorPublishTask( void * pvParameters )
                                      "{ \"timer_s\": %ld, \"sent_p\": %ld, \"received_p\": %ld }",
                                      xData.timer, xData.sent, xData.received );
 
-            if( bytesWritten < MQTT_PUBLISH_MAX_LEN )
-            {
-                xResult = prvPublishAndWaitForAck( xAgentHandle,
-                                                   pcTopicString,
-                                                   payloadBuf,
-                                                   bytesWritten );
-            }
-            else if( bytesWritten > 0 )
-            {
-                LogError( "Not enough buffer space." );
-            }
-            else
-            {
-                LogError( "Printf call failed." );
-            }
+            size_t l = sizeof(NetworkData_t);
+            size_t s = xMessageBufferSend(iotcAppQueueTelemetry, &xData, l, 0xffff);
+            if(s != l)
+                LogError( "Error while writing to iotcAppQueueTelemetry." );
+
+//            if( bytesWritten < MQTT_PUBLISH_MAX_LEN )
+//            {
+//                xResult = prvPublishAndWaitForAck( xAgentHandle,
+//                                                   pcTopicString,
+//                                                   payloadBuf,
+//                                                   bytesWritten );
+//            }
+//            else if( bytesWritten > 0 )
+//            {
+//                LogError( "Not enough buffer space." );
+//            }
+//            else
+//            {
+//                LogError( "Printf call failed." );
+//            }
 
             if( xResult == pdTRUE )
             {
diff --git a/Projects/Common/app/mqtt/mqtt_agent_task.c b/Projects/Common/app/mqtt/mqtt_agent_task.c
index 97eebea..24dddad 100644
--- a/Projects/Common/app/mqtt/mqtt_agent_task.c
+++ b/Projects/Common/app/mqtt/mqtt_agent_task.c
@@ -41,7 +41,6 @@
 #include "task.h"
 #include "event_groups.h"
 
-#include "kvstore.h"
 #include "mqtt_metrics.h"
 
 /* MQTT library includes. */
@@ -65,6 +64,10 @@
 #include "mbedtls_transport.h"
 #include "sys_evt.h"
 
+#include "iotconnect.h"
+#include "kvstore.h"
+#include "iotc_mqtt_client.h"
+
 /*-----------------------------------------------------------*/
 
 /**
@@ -163,6 +166,19 @@ static const char * pcAlpnProtocols[] = { AWS_IOT_MQTT_ALPN, NULL };
 
 static MQTTAgentHandle_t xDefaultInstanceHandle = NULL;
 
+/*
+ * @brief Configuration settings passed for iotconnect_init().
+ */
+static struct IOTCMQTTConfig {
+	const char *host;
+	int port;
+	char *duid;
+	PkiObject_t root_ca_cert;
+	PkiObject_t client_certificate;
+	PkiObject_t private_key;
+} mqtt_config;
+
+
 /*-----------------------------------------------------------*/
 
 /**
@@ -555,8 +571,6 @@ static void prvResubscribeCommandCallback( MQTTAgentCommandContext_t * pxCommand
     for( uint32_t ulSubIdx = 0; ulSubIdx < pxCtx->uxSubscriptionCount; ulSubIdx++ )
     {
         /* Update cached SubAck status */
-      if( pxReturnInfo->pSubackCodes != NULL )
-      {
         pxCtx->pxSubAckStatus[ ulSubIdx ] = pxReturnInfo->pSubackCodes[ ulSubIdx ];
 
         if( pxReturnInfo->pSubackCodes[ ulSubIdx ] == MQTTSubAckFailure )
@@ -579,11 +593,6 @@ static void prvResubscribeCommandCallback( MQTTAgentCommandContext_t * pxCommand
                 }
             }
         }
-      }
-      else
-      {
-         ;// configASSERT(pxReturnInfo->pSubackCodes);
-      }
     }
 
     ( void ) xUnlockSubCtx( pxCtx );
@@ -681,6 +690,8 @@ static void prvIncomingPublishCallback( MQTTAgentContext_t * pMqttAgentContext,
 
     ( void ) packetId;
 
+    LogInfo("prvIncomingPublishCallback");
+
     configASSERT( pMqttAgentContext );
     configASSERT( pMqttAgentContext->pIncomingCallbackContext );
     configASSERT( pxPublishInfo );
@@ -876,17 +887,22 @@ static MQTTStatus_t prvConfigureAgentTaskCtx( MQTTAgentTaskCtx_t * pxCtx,
         pxCtx->xConnectInfo.pPassword = NULL;
         pxCtx->xConnectInfo.passwordLength = 0U;
 
-        pxCtx->xConnectInfo.pClientIdentifier = KVStore_getStringHeap( CS_CORE_THING_NAME, &uxTempSize );
+        pxCtx->xConnectInfo.pClientIdentifier = mqtt_config.duid;
 
-        if( ( pxCtx->xConnectInfo.pClientIdentifier != NULL ) &&
-            ( uxTempSize > 0 ) &&
-            ( uxTempSize <= UINT16_MAX ) )
-        {
-            pxCtx->xConnectInfo.clientIdentifierLength = ( uint16_t ) uxTempSize;
+        if( pxCtx->xConnectInfo.pClientIdentifier != NULL ) {
+
+        	size_t device_id_len = strlen(pxCtx->xConnectInfo.pClientIdentifier);
+
+        	if (device_id_len > 0 && device_id_len <= UINT16_MAX) {
+        		pxCtx->xConnectInfo.clientIdentifierLength = ( uint16_t ) device_id_len;
+        	} else {
+                LogError( "Invalid device id length" );
+                xStatus = MQTTNoMemory;
+        	}
         }
         else
         {
-            LogError( "Invalid client identifier read from KVStore." );
+            LogError( "Invalid device id" );
             xStatus = MQTTNoMemory;
         }
     }
@@ -917,25 +933,24 @@ static MQTTStatus_t prvConfigureAgentTaskCtx( MQTTAgentTaskCtx_t * pxCtx,
 
     if( xStatus == MQTTSuccess )
     {
-        pxCtx->pcMqttEndpoint = KVStore_getStringHeap( CS_CORE_MQTT_ENDPOINT,
-                                                       &( pxCtx->uxMqttEndpointLen ) );
+        pxCtx->pcMqttEndpoint = mqtt_config.host;
 
-        if( ( pxCtx->uxMqttEndpointLen == 0 ) ||
-            ( pxCtx->pcMqttEndpoint == NULL ) )
+//        pxCtx->pcMqttEndpoint = "ENDPOINT";
+        if( pxCtx->pcMqttEndpoint == NULL || strlen(pxCtx->pcMqttEndpoint) == 0)
         {
-            LogError( "Invalid mqtt endpoint read from KVStore." );
+            LogError( "Invalid mqtt endpoint." );
             xStatus = MQTTNoMemory;
         }
     }
 
     if( xStatus == MQTTSuccess )
     {
-        pxCtx->ulMqttPort = KVStore_getUInt32( CS_CORE_MQTT_PORT, &( xSuccess ) );
+        pxCtx->ulMqttPort = mqtt_config.port;
 
         if( ( pxCtx->ulMqttPort == 0 ) ||
             ( xSuccess == pdFALSE ) )
         {
-            LogError( "Invalid mqtt port number read from KVStore." );
+            LogError( "Invalid mqtt port number." );
             xStatus = MQTTNoMemory;
         }
     }
@@ -960,11 +975,26 @@ MQTTAgentHandle_t xGetMqttAgentHandle( void )
     return xDefaultInstanceHandle;
 }
 
+
 /*-----------------------------------------------------------*/
 
-void vMQTTAgentTask( void * pvParameters )
+extern void vLogCertInfo( mbedtls_x509_crt * pxCert, const char * pcMessage );
+
+#define MQTTS_PORT		8883
+
+void vMQTTAgentTask(void *arg)
 {
-    MQTTStatus_t xMQTTStatus = MQTTSuccess;
+	IotConnectDeviceClientConfig *client_config = arg;
+
+	mqtt_config.host = client_config->host;
+	mqtt_config.port = MQTTS_PORT;
+	mqtt_config.duid = client_config->duid;
+	mqtt_config.root_ca_cert = client_config->auth->mqtt_root_ca;
+	mqtt_config.client_certificate =
+			client_config->auth->data.cert_info.device_cert;
+	mqtt_config.private_key = client_config->auth->data.cert_info.device_key;
+
+	MQTTStatus_t xMQTTStatus = MQTTSuccess;
     TlsTransportStatus_t xTlsStatus = TLS_TRANSPORT_CONNECT_FAILURE;
     BaseType_t xExitFlag = pdFALSE;
 
@@ -973,12 +1003,6 @@ void vMQTTAgentTask( void * pvParameters )
     NetworkContext_t * pxNetworkContext = NULL;
     uint16_t usNextRetryBackOff = 0U;
 
-    PkiObject_t xPrivateKey = xPkiObjectFromLabel( TLS_KEY_PRV_LABEL );
-    PkiObject_t xClientCertificate = xPkiObjectFromLabel( TLS_CERT_LABEL );
-    PkiObject_t pxRootCaChain[ 1 ] = { xPkiObjectFromLabel( TLS_ROOT_CA_CERT_LABEL ) };
-
-    ( void ) pvParameters;
-
     /* Miscellaneous initialization. */
     ulGlobalEntryTimeMs = prvGetTimeMs();
 
@@ -1004,14 +1028,14 @@ void vMQTTAgentTask( void * pvParameters )
 
     if( xMQTTStatus == MQTTSuccess )
     {
-          xTlsStatus = mbedtls_transport_configure( pxNetworkContext,
+        xTlsStatus = mbedtls_transport_configure( pxNetworkContext,
                                                   pcAlpnProtocols,
-                                                  &xPrivateKey,
-                                                  &xClientCertificate,
-                                                  pxRootCaChain,
+                                                  &mqtt_config.private_key,
+                                                  &mqtt_config.client_certificate,
+												  &mqtt_config.root_ca_cert,
                                                   1 );
 
-          if( xTlsStatus != TLS_TRANSPORT_SUCCESS )
+        if( xTlsStatus != TLS_TRANSPORT_SUCCESS )
         {
             LogError( "Failed to configure mbedtls transport." );
             xMQTTStatus = MQTTBadParameter;
@@ -1073,11 +1097,6 @@ void vMQTTAgentTask( void * pvParameters )
             LogError( "Failed to configure socket recv ready callback." );
             xMQTTStatus = MQTTBadParameter;
         }
-        else
-        {
-            ( void ) xEventGroupSetBits( xSystemEvents, EVT_MASK_TLS_INIT );
-            xDefaultInstanceHandle = &( pxCtx->xAgentContext );
-        }
     }
 
     if( xMQTTStatus != MQTTSuccess )
@@ -1138,11 +1157,6 @@ void vMQTTAgentTask( void * pvParameters )
                     xExitFlag = pdTRUE;
                 }
             }
-            else
-            {
-                ( void ) xEventGroupSetBits( xSystemEvents, EVT_MASK_TLS_CONNECTED );
-                xDefaultInstanceHandle = &( pxCtx->xAgentContext );
-            }
         }
 
         if( xTlsStatus == TLS_TRANSPORT_SUCCESS )
@@ -1229,7 +1243,6 @@ void vMQTTAgentTask( void * pvParameters )
 
         mbedtls_transport_disconnect( pxNetworkContext );
 
-        ( void ) xEventGroupClearBits( xSystemEvents, EVT_MASK_TLS_CONNECTED );
         ( void ) xEventGroupClearBits( xSystemEvents, EVT_MASK_MQTT_CONNECTED );
 
         /* Wait for any subscription related calls to complete */
diff --git a/Projects/Common/cli/logging.c b/Projects/Common/cli/logging.c
index 56bec7f..575b7f8 100644
--- a/Projects/Common/cli/logging.c
+++ b/Projects/Common/cli/logging.c
@@ -284,6 +284,93 @@ void vLoggingPrintf( const char * const pcLogLevel,
     }
 }
 
+/* @brief	Variant of vLoggingPrintf that adds and err_code field.
+ */
+void vLoggingPrintf2(const char *const pcLogLevel, const char *const pcFileName,
+		const unsigned long ulLineNumber, int err_code,
+		const char *const pcFormat, ...) {
+	uint32_t ulLenTotal = 0;
+	int32_t lLenPart = -1;
+	va_list args;
+	const char *pcTaskName = NULL;
+	BaseType_t xSchedulerWasSuspended = pdFALSE;
+
+	/* Additional info to place at the start of the log line */
+	if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
+		pcTaskName = pcTaskGetName( NULL);
+	} else {
+		pcTaskName = "None";
+	}
+
+	if (xTaskGetSchedulerState() == taskSCHEDULER_RUNNING) {
+		xSchedulerWasSuspended = pdTRUE;
+		/* Suspend the scheduler to access pcPrintBuff */
+		vTaskSuspendAll();
+	}
+
+	pcPrintBuff[0] = '\0';
+	lLenPart = snprintf(pcPrintBuff,
+	dlMAX_PRINT_STRING_LENGTH, "<%-3.3s> %8lu [%-10.10s] %d ", pcLogLevel,
+			((unsigned long) xTaskGetTickCount() / portTICK_PERIOD_MS)
+					& 0xFFFFFF, pcTaskName, err_code);
+
+	configASSERT(lLenPart > 0);
+
+	if (lLenPart < dlMAX_PRINT_STRING_LENGTH) {
+		ulLenTotal = lLenPart;
+	} else {
+		ulLenTotal = dlMAX_PRINT_STRING_LENGTH;
+	}
+
+	if (ulLenTotal < dlMAX_PRINT_STRING_LENGTH) {
+		/* There are a variable number of parameters. */
+		va_start(args, pcFormat);
+		lLenPart = vsnprintf(&pcPrintBuff[ulLenTotal],
+				( dlMAX_PRINT_STRING_LENGTH - ulLenTotal), pcFormat, args);
+		va_end(args);
+
+		configASSERT(lLenPart > 0);
+
+		if (lLenPart + ulLenTotal < dlMAX_PRINT_STRING_LENGTH) {
+			ulLenTotal += lLenPart;
+		} else {
+			ulLenTotal = dlMAX_PRINT_STRING_LENGTH;
+		}
+	}
+
+	/* remove any \r\n\0 characters at the end of the message */
+	while (ulLenTotal > 0
+			&& (pcPrintBuff[ulLenTotal - 1] == '\r'
+					|| pcPrintBuff[ulLenTotal - 1] == '\n'
+					|| pcPrintBuff[ulLenTotal - 1] == '\0')) {
+		pcPrintBuff[ulLenTotal - 1] = '\0';
+		ulLenTotal--;
+	}
+
+	if ((pcFileName != NULL) && (ulLineNumber > 0)
+			&& (ulLenTotal < dlMAX_LOG_LINE_LENGTH)) {
+		/* Add the trailer including file name and line number */
+		lLenPart = snprintf(&pcPrintBuff[ulLenTotal],
+				( dlMAX_LOG_LINE_LENGTH - ulLenTotal), " (%s:%lu)", pcFileName,
+				ulLineNumber);
+
+		configASSERT(lLenPart > 0);
+
+		if (lLenPart + ulLenTotal < dlMAX_LOG_LINE_LENGTH) {
+			ulLenTotal += lLenPart;
+		} else {
+			ulLenTotal = dlMAX_LOG_LINE_LENGTH;
+		}
+	}
+
+	vSendLogMessage((void*) pcPrintBuff, ulLenTotal);
+
+	if (xSchedulerWasSuspended == pdTRUE) {
+		xTaskResumeAll();
+	}
+}
+
+
 /*-----------------------------------------------------------*/
 void vLoggingDeInit( void )
 {
diff --git a/Projects/Common/config/core_http_config.h b/Projects/Common/config/core_http_config.h
index 04265d7..fab38d5 100644
--- a/Projects/Common/config/core_http_config.h
+++ b/Projects/Common/config/core_http_config.h
@@ -34,5 +34,10 @@
 
 #include "logging.h"
 
+/*
+ *  HTTP Timeout set to 15000 milliseconds as default timeout of 10ms results in a timeout
+ *  before we get a response.
+ */
+#define HTTP_RECV_RETRY_TIMEOUT_MS    ( 15000U )
 
 #endif /* CORE_HTTP_CONFIG_H */
diff --git a/Projects/Common/config/iotcl_user_config.h b/Projects/Common/config/iotcl_user_config.h
new file mode 100644
index 0000000..4f66c40
--- /dev/null
+++ b/Projects/Common/config/iotcl_user_config.h
@@ -0,0 +1,56 @@
+/*
+ * iotcl_user_config.h
+ *
+ *  Created on: May 8, 2024
+ *      Author: mgilhespie
+ */
+
+#ifndef COMMON_CONFIG_IOTCL_USER_CONFIG_H_
+#define COMMON_CONFIG_IOTCL_USER_CONFIG_H_
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include <logging.h>
+
+
+/* @brief 	Enable or Disable iot-connect logging using the IOTCL_ macros
+ *
+ * Remove the leading "//" comment marker from the lines below to disable logging
+ * for that log level.
+ */
+
+// #define IOTCL_ERROR(err_code, ...)
+// #define IOTCL_WARN(err_code, ...)
+// #define IOTCL_INFO(...)
+
+/* ------------------------------------------------------------------------ */
+
+#ifndef IOTCL_ERROR
+#define IOTCL_ERROR(err_code, ...) \
+    do { \
+        vLoggingPrintf2("ERR", __NAME_ARG__,__LINE__, err_code, __VA_ARGS__); \
+    } while(0)
+#endif
+
+#ifndef IOTCL_WARN
+#define IOTCL_WARN(err_code, ...) \
+    do { \
+        vLoggingPrintf2("WRN", __NAME_ARG__,__LINE__, err_code, __VA_ARGS__); \
+    } while(0)
+#endif
+
+#ifndef IOTCL_INFO
+#define IOTCL_INFO(...) \
+    do { \
+        vLoggingPrintf("INF", __NAME_ARG__,__LINE__, __VA_ARGS__); \
+    } while(0)
+#endif
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* COMMON_CONFIG_IOTCL_USER_CONFIG_H_ */
diff --git a/Projects/Common/config/iotconnect_config.h b/Projects/Common/config/iotconnect_config.h
new file mode 100644
index 0000000..b636efd
--- /dev/null
+++ b/Projects/Common/config/iotconnect_config.h
@@ -0,0 +1,17 @@
+/*
+ * iotconnect_config.h
+ *
+ *  Created on: Nov 3, 2023
+ *      Author: mgilhespie
+ */
+
+#ifndef CONFIG_IOTCONNECT_CONFIG_H_
+#define CONFIG_IOTCONNECT_CONFIG_H_
+
+/* @brief Enable discovery and sync instead of providing mqtt endpoint and telemetry cd settings
+ */
+#define IOTCONFIG_USE_DISCOVERY_SYNC
+#define IOTCONFIG_ENABLE_OTA
+
+
+#endif /* CONFIG_IOTCONNECT_CONFIG_H_ */
diff --git a/Projects/Common/config/kvstore_config.h b/Projects/Common/config/kvstore_config.h
index f471dfb..700ee27 100644
--- a/Projects/Common/config/kvstore_config.h
+++ b/Projects/Common/config/kvstore_config.h
@@ -39,6 +39,8 @@ typedef enum KvStoreEnum
     CS_WIFI_SSID,
     CS_WIFI_CREDENTIAL,
     CS_TIME_HWM_S_1970,
+    CS_IOTC_CPID,
+    CS_IOTC_ENV,
     CS_NUM_KEYS
 } KVStoreKey_t;
 
@@ -96,6 +98,14 @@ typedef enum KvStoreEnum
 #if !defined( WIFI_SECURITY_DFLT )
 #define WIFI_SECURITY_DFLT    ""
 #endif /* !defined ( WIFI_SECURITY_DFLT ) */
+
+#if !defined( IOTC_CPID_DFLT )
+#define IOTC_CPID_DFLT    ""
+#endif /* !defined ( IOTC_CPID_DFLT ) */
+
+#if !defined( IOTC_ENV_DFLT )
+#define IOTC_ENV_DFLT    ""
+#endif /* !defined ( IOTC_ENV_DFLT ) */
 /* -------------------------------- Values for common attributes -------------------------------- */
 
 /* Array to map between strings and KVStoreKey_t IDs */
@@ -106,7 +116,9 @@ typedef enum KvStoreEnum
         "mqtt_port",       \
         "wifi_ssid",       \
         "wifi_credential", \
-        "time_hwm"         \
+        "time_hwm",        \
+        "cpid",            \
+        "env"              \
     }
 
 #define KV_STORE_DEFAULTS                                                          \
@@ -117,6 +129,8 @@ typedef enum KvStoreEnum
         KV_DFLT( KV_TYPE_STRING, WIFI_SSID_DFLT ),     /* CS_WIFI_SSID */          \
         KV_DFLT( KV_TYPE_STRING, WIFI_PASSWORD_DFLT ), /* CS_WIFI_CREDENTIAL */    \
         KV_DFLT( KV_TYPE_UINT32, 0 ),                  /* CS_TIME_HWM_S_1970 */    \
+        KV_DFLT( KV_TYPE_STRING, IOTC_CPID_DFLT ), 	   /* CS_IOTC_CPID */          \
+        KV_DFLT( KV_TYPE_STRING, IOTC_ENV_DFLT ), 	   /* CS_IOTC_ENV */           \
     }
 
 #endif /* _KVSTORE_CONFIG_H */
diff --git a/Projects/STM32H573I-DK/aws_eth/Inc/mbedtls_config_ntz.h b/Projects/STM32H573I-DK/aws_eth/Inc/mbedtls_config_ntz.h
index a015e73..cbef365 100644
--- a/Projects/STM32H573I-DK/aws_eth/Inc/mbedtls_config_ntz.h
+++ b/Projects/STM32H573I-DK/aws_eth/Inc/mbedtls_config_ntz.h
@@ -533,35 +533,35 @@ void mbedtls_platform_free( void * ptr );
  *
  * Enable Cipher Block Chaining mode (CBC) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CBC
+#define MBEDTLS_CIPHER_MODE_CBC
 
 /**
  * \def MBEDTLS_CIPHER_MODE_CFB
  *
  * Enable Cipher Feedback mode (CFB) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CFB
+#define MBEDTLS_CIPHER_MODE_CFB
 
 /**
  * \def MBEDTLS_CIPHER_MODE_CTR
  *
  * Enable Counter Block Cipher mode (CTR) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CTR
+#define MBEDTLS_CIPHER_MODE_CTR
 
 /**
  * \def MBEDTLS_CIPHER_MODE_OFB
  *
  * Enable Output Feedback mode (OFB) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_OFB
+#define MBEDTLS_CIPHER_MODE_OFB
 
 /**
  * \def MBEDTLS_CIPHER_MODE_XTS
  *
  * Enable Xor-encrypt-xor with ciphertext stealing mode (XTS) for AES.
  */
-//#define MBEDTLS_CIPHER_MODE_XTS
+#define MBEDTLS_CIPHER_MODE_XTS
 
 /**
  * \def MBEDTLS_CIPHER_NULL_CIPHER
@@ -593,7 +593,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment this macro to enable the NULL cipher and ciphersuites
  */
-//#define MBEDTLS_CIPHER_NULL_CIPHER
+#define MBEDTLS_CIPHER_NULL_CIPHER
 
 /**
  * \def MBEDTLS_CIPHER_PADDING_PKCS7
@@ -606,10 +606,10 @@ void mbedtls_platform_free( void * ptr );
  *
  * Enable padding modes in the cipher layer.
  */
-//#define MBEDTLS_CIPHER_PADDING_PKCS7
-//#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
-//#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
-//#define MBEDTLS_CIPHER_PADDING_ZEROS
+#define MBEDTLS_CIPHER_PADDING_PKCS7
+#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
+#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
+#define MBEDTLS_CIPHER_PADDING_ZEROS
 
 /** \def MBEDTLS_CTR_DRBG_USE_128_BIT_KEY
  *
@@ -627,20 +627,20 @@ void mbedtls_platform_free( void * ptr );
  * Comment macros to disable the curve and functions for it
  */
 /* Short Weierstrass curves (supporting ECP, ECDH, ECDSA) */
-//#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
 #define MBEDTLS_ECP_DP_SECP256R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
+#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
+#define MBEDTLS_ECP_DP_BP256R1_ENABLED
+#define MBEDTLS_ECP_DP_BP384R1_ENABLED
+#define MBEDTLS_ECP_DP_BP512R1_ENABLED
 //#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
-//#define MBEDTLS_ECP_DP_BP256R1_ENABLED
-//#define MBEDTLS_ECP_DP_BP384R1_ENABLED
-//#define MBEDTLS_ECP_DP_BP512R1_ENABLED
-/* Montgomery curves (supporting ECP) */
-//#define MBEDTLS_ECP_DP_CURVE25519_ENABLED
-//#define MBEDTLS_ECP_DP_CURVE448_ENABLED
+#define MBEDTLS_ECP_DP_CURVE25519_ENABLED
+#define MBEDTLS_ECP_DP_CURVE448_ENABLED
 
 /**
  * \def MBEDTLS_ECP_NIST_OPTIM
@@ -689,7 +689,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this macro to disable deterministic ECDSA.
  */
-//#define MBEDTLS_ECDSA_DETERMINISTIC
+#define MBEDTLS_ECDSA_DETERMINISTIC
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_PSK_ENABLED
@@ -804,7 +804,7 @@ void mbedtls_platform_free( void * ptr );
  *      MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
  *      MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
  */
-//#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
@@ -836,7 +836,7 @@ void mbedtls_platform_free( void * ptr );
  *             See dhm.h for more details.
  *
  */
-//#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
@@ -859,7 +859,7 @@ void mbedtls_platform_free( void * ptr );
  *      MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
@@ -903,7 +903,7 @@ void mbedtls_platform_free( void * ptr );
  *      MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
@@ -925,7 +925,7 @@ void mbedtls_platform_free( void * ptr );
  *      MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED
@@ -958,7 +958,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Disable if you only need to support RFC 5915 + 5480 key formats.
  */
-//#define MBEDTLS_PK_PARSE_EC_EXTENDED
+#define MBEDTLS_PK_PARSE_EC_EXTENDED
 
 /**
  * \def MBEDTLS_ERROR_STRERROR_DUMMY
@@ -982,7 +982,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_BIGNUM_C
  */
-//#define MBEDTLS_GENPRIME
+#define MBEDTLS_GENPRIME
 
 /**
  * \def MBEDTLS_FS_IO
@@ -1318,7 +1318,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment to enable the Connection ID extension.
  */
-//#define MBEDTLS_SSL_DTLS_CONNECTION_ID
+#define MBEDTLS_SSL_DTLS_CONNECTION_ID
 
 /**
  * \def MBEDTLS_SSL_ASYNC_PRIVATE
@@ -1488,7 +1488,7 @@ void mbedtls_platform_free( void * ptr );
  * Uncomment this macro to enable experimental and partial
  * functionality specific to TLS 1.3.
  */
-//#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
+#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
 
 /**
  * \def MBEDTLS_SSL_PROTO_DTLS
@@ -1501,7 +1501,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this macro to disable support for DTLS
  */
-//#define MBEDTLS_SSL_PROTO_DTLS
+#define MBEDTLS_SSL_PROTO_DTLS
 
 /**
  * \def MBEDTLS_SSL_ALPN
@@ -1525,7 +1525,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this to disable anti-replay in DTLS.
  */
-//#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
+#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
 
 /**
  * \def MBEDTLS_SSL_DTLS_HELLO_VERIFY
@@ -1543,7 +1543,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this to disable support for HelloVerifyRequest.
  */
-//#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
+#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
 
 /**
  * \def MBEDTLS_SSL_DTLS_SRTP
@@ -1574,7 +1574,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment this to enable support for use_srtp extension.
  */
-//#define MBEDTLS_SSL_DTLS_SRTP
+#define MBEDTLS_SSL_DTLS_SRTP
 
 /**
  * \def MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
@@ -1590,7 +1590,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this to disable support for clients reusing the source port.
  */
-//#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
+#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
 
 /**
  * \def MBEDTLS_SSL_SESSION_TICKETS
@@ -1614,7 +1614,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this macro to disable support for key export
  */
-//#define MBEDTLS_SSL_EXPORT_KEYS
+#define MBEDTLS_SSL_EXPORT_KEYS
 
 /**
  * \def MBEDTLS_SSL_SERVER_NAME_INDICATION
@@ -1635,7 +1635,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_SSL_MAX_FRAGMENT_LENGTH
  */
-//#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
+#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
 
 /**
  * \def MBEDTLS_TEST_CONSTANT_FLOW_MEMSAN
@@ -1786,7 +1786,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment to enable trusted certificate callbacks.
  */
-//#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
+#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
 
 /**
  * \def MBEDTLS_X509_REMOVE_INFO
@@ -1807,7 +1807,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this macro to disallow using RSASSA-PSS in certificates.
  */
-//#define MBEDTLS_X509_RSASSA_PSS_SUPPORT
+#define MBEDTLS_X509_RSASSA_PSS_SUPPORT
 /* \} name SECTION: mbed TLS feature support */
 
 /**
@@ -2082,7 +2082,7 @@ void mbedtls_platform_free( void * ptr );
  * This module enables the AES-CCM ciphersuites, if other requisites are
  * enabled as well.
  */
-//#define MBEDTLS_CCM_C
+#define MBEDTLS_CCM_C
 
 /**
  * \def MBEDTLS_CHACHA20_C
@@ -2091,7 +2091,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Module:  library/chacha20.c
  */
-//#define MBEDTLS_CHACHA20_C
+#define MBEDTLS_CHACHA20_C
 
 /**
  * \def MBEDTLS_CHACHAPOLY_C
@@ -2102,7 +2102,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module requires: MBEDTLS_CHACHA20_C, MBEDTLS_POLY1305_C
  */
-//#define MBEDTLS_CHACHAPOLY_C
+#define MBEDTLS_CHACHAPOLY_C
 
 /**
  * \def MBEDTLS_CIPHER_C
@@ -2182,7 +2182,7 @@ void mbedtls_platform_free( void * ptr );
  * \warning   DES is considered a weak cipher and its use constitutes a
  *            security risk. We recommend considering stronger ciphers instead.
  */
-/*#define MBEDTLS_DES_C */
+#define MBEDTLS_DES_C
 
 /**
  * \def MBEDTLS_DHM_C
@@ -2203,7 +2203,7 @@ void mbedtls_platform_free( void * ptr );
  *             See dhm.h for more details.
  *
  */
-//#define MBEDTLS_DHM_C
+#define MBEDTLS_DHM_C
 
 /**
  * \def MBEDTLS_ECDH_C
@@ -2324,7 +2324,7 @@ void mbedtls_platform_free( void * ptr );
  * This module adds support for the Hashed Message Authentication Code
  * (HMAC)-based key derivation function (HKDF).
  */
-//#define MBEDTLS_HKDF_C
+#define MBEDTLS_HKDF_C
 
 /**
  * \def MBEDTLS_HMAC_DRBG_C
@@ -2338,7 +2338,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment to enable the HMAC_DRBG random number geerator.
  */
-//#define MBEDTLS_HMAC_DRBG_C
+#define MBEDTLS_HMAC_DRBG_C
 
 /**
  * \def MBEDTLS_NIST_KW_C
@@ -2351,7 +2351,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_AES_C and MBEDTLS_CIPHER_C
  */
-//#define MBEDTLS_NIST_KW_C
+#define MBEDTLS_NIST_KW_C
 
 /**
  * \def MBEDTLS_MD_C
@@ -2384,7 +2384,7 @@ void mbedtls_platform_free( void * ptr );
  *            it, and considering stronger message digests instead.
  *
  */
-//#define MBEDTLS_MD5_C
+#define MBEDTLS_MD5_C
 
 /**
  * \def MBEDTLS_MEMORY_BUFFER_ALLOC_C
@@ -2548,7 +2548,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module adds support for the PKCS#5 functions.
  */
-//#define MBEDTLS_PKCS5_C
+#define MBEDTLS_PKCS5_C
 
 /**
  * \def MBEDTLS_PKCS12_C
@@ -2563,7 +2563,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module enables PKCS#12 functions.
  */
-//#define MBEDTLS_PKCS12_C
+#define MBEDTLS_PKCS12_C
 
 /**
  * \def MBEDTLS_PLATFORM_C
@@ -2593,7 +2593,7 @@ void mbedtls_platform_free( void * ptr );
  * Module:  library/poly1305.c
  * Caller:  library/chachapoly.c
  */
-//#define MBEDTLS_POLY1305_C
+#define MBEDTLS_POLY1305_C
 
 /**
  * \def MBEDTLS_PSA_CRYPTO_C
@@ -2793,7 +2793,7 @@ void mbedtls_platform_free( void * ptr );
  * Module:  library/ssl_cookie.c
  * Caller:
  */
-//#define MBEDTLS_SSL_COOKIE_C
+#define MBEDTLS_SSL_COOKIE_C
 
 /**
  * \def MBEDTLS_SSL_TICKET_C
@@ -2805,7 +2805,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_CIPHER_C
  */
-//#define MBEDTLS_SSL_TICKET_C
+#define MBEDTLS_SSL_TICKET_C
 
 /**
  * \def MBEDTLS_SSL_CLI_C
@@ -2951,7 +2951,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module is required for X.509 CRL parsing.
  */
-//#define MBEDTLS_X509_CRL_PARSE_C
+#define MBEDTLS_X509_CRL_PARSE_C
 
 /**
  * \def MBEDTLS_X509_CSR_PARSE_C
@@ -2965,7 +2965,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module is used for reading X.509 certificate request.
  */
-//#define MBEDTLS_X509_CSR_PARSE_C
+#define MBEDTLS_X509_CSR_PARSE_C
 
 /**
  * \def MBEDTLS_X509_CREATE_C
diff --git a/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.cproject b/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.cproject
index 434e6c8..0e30361 100644
--- a/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.cproject
+++ b/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.cproject
@@ -34,6 +34,9 @@
 								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.definedsymbols.904588808" name="Define symbols (-D)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.definedsymbols" valueType="definedSymbols">
 									<listOptionValue builtIn="false" value="DEBUG"/>
 								</option>
+								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.includepaths.390563873" name="Include paths (-I)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.includepaths" valueType="includePath">
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/IoTConnect/iotc-freertos-sdk/smart-inc}&quot;"/>
+								</option>
 								<inputType id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.input.1287599341" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.input"/>
 							</tool>
 							<tool id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.736483198" name="MCU GCC Compiler" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler">
@@ -47,6 +50,7 @@
 									<listOptionValue builtIn="false" value="STM32H573xx"/>
 									<listOptionValue builtIn="false" value="CMSIS_device_header=&quot;main.h&quot;"/>
 									<listOptionValue builtIn="false" value="UNITY_INCLUDE_CONFIG_H"/>
+									<listOptionValue builtIn="false" value="IOTCL_USER_CONFIG_FILE=&quot;iotcl_user_config.h&quot;"/>
 								</option>
 								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.includepaths.1536789643" name="Include paths (-I)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.includepaths" useByScannerDiscovery="false" valueType="includePath">
 									<listOptionValue builtIn="false" value="../../../../../Drivers/STM32H5xx_HAL_Driver/Inc"/>
@@ -74,6 +78,7 @@
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/kernel/portable/GCC/ARM_CM33_NTZ/non_secure"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreJSON/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreMQTT/source/include"/>
+									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreHTTP/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreMQTT/source/interface"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreMQTT-Agent/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/corePKCS11/source/include"/>
@@ -94,6 +99,7 @@
 									<listOptionValue builtIn="false" value="../../Src/fs"/>
 									<listOptionValue builtIn="false" value="../../Src/ota_pal"/>
 									<listOptionValue builtIn="false" value="../../Inc"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/IoTConnect/iotc-freertos-sdk/smart-inc}&quot;"/>
 								</option>
 								<option id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.slow_flash_data.1546247664" name="Assume loading data from flash is slower than fetching instruction (-mslow-flash-data)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.slow_flash_data" useByScannerDiscovery="false" value="true" valueType="boolean"/>
 								<inputType id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.input.c.769522104" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.input.c"/>
@@ -120,6 +126,9 @@
 							<tool id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.objcopy.symbolsrec.1119651757" name="MCU Output Converter Motorola S-rec with symbols" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.objcopy.symbolsrec"/>
 						</toolChain>
 					</folderInfo>
+					<sourceEntries>
+						<entry excluding="my-middlewares|IotC-middlewares" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
+					</sourceEntries>
 				</configuration>
 			</storageModule>
 			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
diff --git a/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.project b/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.project
index 1e49342..fa23b76 100644
--- a/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.project
+++ b/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.project
@@ -32,6 +32,11 @@
 		<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>
 	</natures>
 	<linkedResources>
+		<link>
+			<name>IoTConnect</name>
+			<type>2</type>
+			<locationURI>PARENT-4-PROJECT_LOC/IoTConnect</locationURI>
+		</link>
 		<link>
 			<name>STM32H573I-DK_aws_eth.ioc</name>
 			<type>1</type>
@@ -372,6 +377,16 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/ccm.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/chacha20.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/chacha20.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/chachapoly.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/chachapoly.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/cipher.c</name>
 			<type>1</type>
@@ -402,6 +417,11 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/debug.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/des.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/des.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/dhm.c</name>
 			<type>1</type>
@@ -462,11 +482,21 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/md.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/md5.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/md5.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/memory_buffer_alloc.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/memory_buffer_alloc.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/nist_kw.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/nist_kw.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/oid.c</name>
 			<type>1</type>
@@ -492,6 +522,16 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pk_wrap.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/pkcs12.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkcs12.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/pkcs5.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkcs5.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/pkparse.c</name>
 			<type>1</type>
@@ -512,6 +552,11 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/platform_util.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/poly1305.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/poly1305.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/rsa.c</name>
 			<type>1</type>
diff --git a/Projects/STM32H573I-DK/aws_eth/Src/app_main.c b/Projects/STM32H573I-DK/aws_eth/Src/app_main.c
index fd2f3ab..ab31745 100644
--- a/Projects/STM32H573I-DK/aws_eth/Src/app_main.c
+++ b/Projects/STM32H573I-DK/aws_eth/Src/app_main.c
@@ -45,6 +45,8 @@
 
 #include "stdlib.h" /* rand() */
 
+#include "iotconnect_app.h"
+
 /* Definition for Qualification Test */
 #if ( DEVICE_ADVISOR_TEST_ENABLED == 1 ) || ( MQTT_TEST_ENABLED == 1 ) || ( TRANSPORT_INTERFACE_TEST_ENABLED == 1 ) || \
     ( OTA_PAL_TEST_ENABLED == 1 ) || ( OTA_E2E_TEST_ENABLED == 1 ) || ( CORE_PKCS11_TEST_ENABLED == 1 )
@@ -55,6 +57,12 @@
 #endif /* ( DEVICE_ADVISOR_TEST_ENABLED == 1 ) || ( MQTT_TEST_ENABLED == 1 ) || ( TRANSPORT_INTERFACE_TEST_ENABLED == 1 ) || \
         * ( OTA_PAL_TEST_ENABLED == 1 ) || ( OTA_E2E_TEST_ENABLED == 1 ) || ( CORE_PKCS11_TEST_ENABLED == 1 ) */
 
+#ifdef IOTC_USE_LED
+volatile bool led_red_state   = true;
+volatile bool led_green_state = true;
+volatile int  led_freq_ms     = 1000;
+#endif
+
 static lfs_t * pxLfsCtx = NULL;
 
 EventGroupHandle_t xSystemEvents = NULL;
@@ -132,18 +140,82 @@ static int fs_init( void )
     return err;
 }
 
+#ifdef IOTC_USE_LED
+void set_led_red(bool state){
+    led_red_state = state;
+    HAL_GPIO_WritePin( LED_RED_GPIO_Port,   LED_RED_Pin,   (led_red_state)?   GPIO_PIN_RESET : GPIO_PIN_SET );
+}
+
+void set_led_green(bool state){
+    led_green_state = state;
+    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, (led_green_state)? GPIO_PIN_RESET : GPIO_PIN_SET);
+}
+
+void set_led_freq(int freq){
+    led_freq_ms = freq;
+}
+#endif // IOTC_USE_LED
+
+int iotc_process_cmd_str(IotclC2dEventData data, char* command){
+	int err = -1;
+    LogInfo("Received command: %s", command);
+
+    if(NULL != strcasestr(command, IOTC_CMD_PING)){
+        LogInfo("Ping Command Received!\n");
+#ifdef IOTC_USE_LED
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_RED)){
+        if (NULL != strcasestr(command, "on")) {
+            LogInfo("led-red on");
+            set_led_red(true);
+        } else if (NULL != strcasestr(command, "off")) {
+            LogInfo("led-red off");
+            set_led_red(false);
+        } else {
+            LogWarn("Invalid led-red command received: %s", command);
+        }
+        err = 0;
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_GREEN)) {
+        if (NULL != strcasestr(command, "on")) {
+            LogInfo("led-green on");
+            set_led_green(true);
+        } else if (NULL != strcasestr(command, "off")) {
+            LogInfo("led-green off");
+            set_led_green(false);
+        } else {
+            LogWarn("Invalid led-green command received: %s", command);
+        }
+        err = 0;
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_FREQ)) {
+        // Get the int following the command
+        int led_freq = atoi(command + strlen(IOTC_CMD_LED_FREQ) + 1);
+        if (0 != led_freq){
+            set_led_freq(led_freq);
+        }
+#endif // IOTC_USE_LED
+    } else {
+        LogInfo("Command not recognized: %s", command);
+    }
+	return err;
+}
+
 static void vHeartbeatTask( void * pvParameters )
 {
     ( void ) pvParameters;
 
-    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, GPIO_PIN_RESET );
-    HAL_GPIO_WritePin( LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET );
+    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, (led_green_state)? GPIO_PIN_RESET : GPIO_PIN_SET);
+    HAL_GPIO_WritePin( LED_RED_GPIO_Port,   LED_RED_Pin,   (led_red_state)?   GPIO_PIN_RESET : GPIO_PIN_SET );
 
     while(1)
     {
-        vTaskDelay( pdMS_TO_TICKS( 1000 ) );
-        HAL_GPIO_TogglePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin );
-        HAL_GPIO_TogglePin( LED_RED_GPIO_Port, LED_RED_Pin );
+        vTaskDelay( pdMS_TO_TICKS( led_freq_ms ) );
+
+        if (led_red_state){
+            HAL_GPIO_TogglePin( LED_RED_GPIO_Port, LED_RED_Pin );
+        }
+
+        if (led_green_state){
+            HAL_GPIO_TogglePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin );
+        }
     }
 }
 
@@ -155,6 +227,7 @@ extern void vOTAUpdateTask( void * pvParam );
 extern void vDefenderAgentTask( void * );
 extern void vSensorDataPublishTask( void * pvParameters );
 extern void vShadowUpdateTask( void * pvParameters );
+extern void iotconnect_app( void * );
 #if DEMO_QUALIFICATION_TEST
 extern void run_qualification_main( void * );
 #endif /* DEMO_QUALIFICATION_TEST */
@@ -205,20 +278,24 @@ void vInitTask( void * pvArgs )
     xResult = xTaskCreate( run_qualification_main, "QualTest", 4096, NULL, 10, NULL );
     configASSERT( xResult == pdTRUE );
 #else
-    xResult = xTaskCreate( vMQTTAgentTask, "MQTTAgent", 1024, NULL, 10, NULL );
-    configASSERT( xResult == pdTRUE );
-
-    xResult = xTaskCreate( vOTAUpdateTask, "OTAUpdate", 512, NULL, tskIDLE_PRIORITY + 1, NULL );
-    configASSERT( xResult == pdTRUE );
-
-    xResult = xTaskCreate( vSensorPublishTask, "Sense", 512, NULL, 6, NULL );
-    configASSERT( xResult == pdTRUE );
-
-    xResult = xTaskCreate( vShadowDeviceTask, "ShadowDevice", 512, NULL, 5, NULL );
-    configASSERT( xResult == pdTRUE );
-
-    xResult = xTaskCreate( vDefenderAgentTask, "AWSDefender", 512 , NULL, 5, NULL );
-    configASSERT( xResult == pdTRUE );
+    //    xResult = xTaskCreate( vMQTTAgentTask, "MQTTAgent", 1024, NULL, 10, NULL );
+    //    configASSERT( xResult == pdTRUE );
+    //
+    //    xResult = xTaskCreate( vOTAUpdateTask, "OTAUpdate", 512, NULL, tskIDLE_PRIORITY + 1, NULL );
+    //    configASSERT( xResult == pdTRUE );
+    //
+        xResult = xTaskCreate( vSensorPublishTask, "Sense", 512, NULL, 6, NULL );
+        configASSERT( xResult == pdTRUE );
+
+    //    xResult = xTaskCreate( vShadowDeviceTask, "ShadowDevice", 512, NULL, 5, NULL );
+    //    configASSERT( xResult == pdTRUE );
+    //
+    //    xResult = xTaskCreate( vDefenderAgentTask, "AWSDefender", 512 , NULL, 5, NULL );
+    //    configASSERT( xResult == pdTRUE );
+        LogInfo("IOTC RUNNING\n");
+
+        xResult = xTaskCreate( iotconnect_app, "iotconnect_app", 4096, NULL, 5, NULL );
+        configASSERT( xResult == pdTRUE );
 #endif /* DEMO_QUALIFICATION_TEST */
 
     while( 1 )
diff --git a/Projects/STM32H573I-DK/aws_eth_tz/Inc/mbedtls_config_psa.h b/Projects/STM32H573I-DK/aws_eth_tz/Inc/mbedtls_config_psa.h
index a1ede14..35915e1 100644
--- a/Projects/STM32H573I-DK/aws_eth_tz/Inc/mbedtls_config_psa.h
+++ b/Projects/STM32H573I-DK/aws_eth_tz/Inc/mbedtls_config_psa.h
@@ -533,35 +533,35 @@ void mbedtls_platform_free( void * ptr );
  *
  * Enable Cipher Block Chaining mode (CBC) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CBC
+#define MBEDTLS_CIPHER_MODE_CBC
 
 /**
  * \def MBEDTLS_CIPHER_MODE_CFB
  *
  * Enable Cipher Feedback mode (CFB) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CFB
+#define MBEDTLS_CIPHER_MODE_CFB
 
 /**
  * \def MBEDTLS_CIPHER_MODE_CTR
  *
  * Enable Counter Block Cipher mode (CTR) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CTR
+#define MBEDTLS_CIPHER_MODE_CTR
 
 /**
  * \def MBEDTLS_CIPHER_MODE_OFB
  *
  * Enable Output Feedback mode (OFB) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_OFB
+#define MBEDTLS_CIPHER_MODE_OFB
 
 /**
  * \def MBEDTLS_CIPHER_MODE_XTS
  *
  * Enable Xor-encrypt-xor with ciphertext stealing mode (XTS) for AES.
  */
-//#define MBEDTLS_CIPHER_MODE_XTS
+#define MBEDTLS_CIPHER_MODE_XTS
 
 /**
  * \def MBEDTLS_CIPHER_NULL_CIPHER
@@ -593,7 +593,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment this macro to enable the NULL cipher and ciphersuites
  */
-//#define MBEDTLS_CIPHER_NULL_CIPHER
+#define MBEDTLS_CIPHER_NULL_CIPHER
 
 /**
  * \def MBEDTLS_CIPHER_PADDING_PKCS7
@@ -606,10 +606,10 @@ void mbedtls_platform_free( void * ptr );
  *
  * Enable padding modes in the cipher layer.
  */
-//#define MBEDTLS_CIPHER_PADDING_PKCS7
-//#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
-//#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
-//#define MBEDTLS_CIPHER_PADDING_ZEROS
+#define MBEDTLS_CIPHER_PADDING_PKCS7
+#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
+#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
+#define MBEDTLS_CIPHER_PADDING_ZEROS
 
 /** \def MBEDTLS_CTR_DRBG_USE_128_BIT_KEY
  *
@@ -627,20 +627,20 @@ void mbedtls_platform_free( void * ptr );
  * Comment macros to disable the curve and functions for it
  */
 /* Short Weierstrass curves (supporting ECP, ECDH, ECDSA) */
-//#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
 #define MBEDTLS_ECP_DP_SECP256R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
-//#define MBEDTLS_ECP_DP_BP256R1_ENABLED
-//#define MBEDTLS_ECP_DP_BP384R1_ENABLED
-//#define MBEDTLS_ECP_DP_BP512R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
+#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
+#define MBEDTLS_ECP_DP_BP256R1_ENABLED
+#define MBEDTLS_ECP_DP_BP384R1_ENABLED
+#define MBEDTLS_ECP_DP_BP512R1_ENABLED
 /* Montgomery curves (supporting ECP) */
-//#define MBEDTLS_ECP_DP_CURVE25519_ENABLED
-//#define MBEDTLS_ECP_DP_CURVE448_ENABLED
+#define MBEDTLS_ECP_DP_CURVE25519_ENABLED
+#define MBEDTLS_ECP_DP_CURVE448_ENABLED
 
 /**
  * \def MBEDTLS_ECP_NIST_OPTIM
@@ -689,7 +689,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this macro to disable deterministic ECDSA.
  */
-//#define MBEDTLS_ECDSA_DETERMINISTIC
+#define MBEDTLS_ECDSA_DETERMINISTIC
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_PSK_ENABLED
@@ -804,7 +804,7 @@ void mbedtls_platform_free( void * ptr );
  *      MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
  *      MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
  */
-//#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
@@ -836,7 +836,7 @@ void mbedtls_platform_free( void * ptr );
  *             See dhm.h for more details.
  *
  */
-//#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
@@ -859,7 +859,7 @@ void mbedtls_platform_free( void * ptr );
  *      MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
@@ -903,7 +903,7 @@ void mbedtls_platform_free( void * ptr );
  *      MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
@@ -925,7 +925,7 @@ void mbedtls_platform_free( void * ptr );
  *      MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED
@@ -958,7 +958,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Disable if you only need to support RFC 5915 + 5480 key formats.
  */
-//#define MBEDTLS_PK_PARSE_EC_EXTENDED
+#define MBEDTLS_PK_PARSE_EC_EXTENDED
 
 /**
  * \def MBEDTLS_ERROR_STRERROR_DUMMY
@@ -982,7 +982,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_BIGNUM_C
  */
-//#define MBEDTLS_GENPRIME
+#define MBEDTLS_GENPRIME
 
 /**
  * \def MBEDTLS_FS_IO
@@ -1318,7 +1318,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment to enable the Connection ID extension.
  */
-//#define MBEDTLS_SSL_DTLS_CONNECTION_ID
+#define MBEDTLS_SSL_DTLS_CONNECTION_ID
 
 /**
  * \def MBEDTLS_SSL_ASYNC_PRIVATE
@@ -1488,7 +1488,7 @@ void mbedtls_platform_free( void * ptr );
  * Uncomment this macro to enable experimental and partial
  * functionality specific to TLS 1.3.
  */
-//#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
+#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
 
 /**
  * \def MBEDTLS_SSL_PROTO_DTLS
@@ -1501,7 +1501,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this macro to disable support for DTLS
  */
-//#define MBEDTLS_SSL_PROTO_DTLS
+#define MBEDTLS_SSL_PROTO_DTLS
 
 /**
  * \def MBEDTLS_SSL_ALPN
@@ -1525,7 +1525,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this to disable anti-replay in DTLS.
  */
-//#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
+#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
 
 /**
  * \def MBEDTLS_SSL_DTLS_HELLO_VERIFY
@@ -1543,7 +1543,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this to disable support for HelloVerifyRequest.
  */
-//#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
+#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
 
 /**
  * \def MBEDTLS_SSL_DTLS_SRTP
@@ -1574,7 +1574,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment this to enable support for use_srtp extension.
  */
-//#define MBEDTLS_SSL_DTLS_SRTP
+#define MBEDTLS_SSL_DTLS_SRTP
 
 /**
  * \def MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
@@ -1590,7 +1590,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this to disable support for clients reusing the source port.
  */
-//#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
+#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
 
 /**
  * \def MBEDTLS_SSL_SESSION_TICKETS
@@ -1614,7 +1614,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this macro to disable support for key export
  */
-//#define MBEDTLS_SSL_EXPORT_KEYS
+#define MBEDTLS_SSL_EXPORT_KEYS
 
 /**
  * \def MBEDTLS_SSL_SERVER_NAME_INDICATION
@@ -1635,7 +1635,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_SSL_MAX_FRAGMENT_LENGTH
  */
-//#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
+#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
 
 /**
  * \def MBEDTLS_TEST_CONSTANT_FLOW_MEMSAN
@@ -1786,7 +1786,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment to enable trusted certificate callbacks.
  */
-//#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
+#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
 
 /**
  * \def MBEDTLS_X509_REMOVE_INFO
@@ -1807,7 +1807,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Comment this macro to disallow using RSASSA-PSS in certificates.
  */
-//#define MBEDTLS_X509_RSASSA_PSS_SUPPORT
+#define MBEDTLS_X509_RSASSA_PSS_SUPPORT
 /* \} name SECTION: mbed TLS feature support */
 
 /**
@@ -2082,7 +2082,7 @@ void mbedtls_platform_free( void * ptr );
  * This module enables the AES-CCM ciphersuites, if other requisites are
  * enabled as well.
  */
-//#define MBEDTLS_CCM_C
+#define MBEDTLS_CCM_C
 
 /**
  * \def MBEDTLS_CHACHA20_C
@@ -2091,7 +2091,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Module:  library/chacha20.c
  */
-//#define MBEDTLS_CHACHA20_C
+#define MBEDTLS_CHACHA20_C
 
 /**
  * \def MBEDTLS_CHACHAPOLY_C
@@ -2102,7 +2102,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module requires: MBEDTLS_CHACHA20_C, MBEDTLS_POLY1305_C
  */
-//#define MBEDTLS_CHACHAPOLY_C
+#define MBEDTLS_CHACHAPOLY_C
 
 /**
  * \def MBEDTLS_CIPHER_C
@@ -2182,7 +2182,7 @@ void mbedtls_platform_free( void * ptr );
  * \warning   DES is considered a weak cipher and its use constitutes a
  *            security risk. We recommend considering stronger ciphers instead.
  */
-/*#define MBEDTLS_DES_C */
+#define MBEDTLS_DES_C 
 
 /**
  * \def MBEDTLS_DHM_C
@@ -2203,7 +2203,7 @@ void mbedtls_platform_free( void * ptr );
  *             See dhm.h for more details.
  *
  */
-//#define MBEDTLS_DHM_C
+#define MBEDTLS_DHM_C
 
 /**
  * \def MBEDTLS_ECDH_C
@@ -2324,7 +2324,7 @@ void mbedtls_platform_free( void * ptr );
  * This module adds support for the Hashed Message Authentication Code
  * (HMAC)-based key derivation function (HKDF).
  */
-//#define MBEDTLS_HKDF_C
+#define MBEDTLS_HKDF_C
 
 /**
  * \def MBEDTLS_HMAC_DRBG_C
@@ -2338,7 +2338,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Uncomment to enable the HMAC_DRBG random number geerator.
  */
-//#define MBEDTLS_HMAC_DRBG_C
+#define MBEDTLS_HMAC_DRBG_C
 
 /**
  * \def MBEDTLS_NIST_KW_C
@@ -2351,7 +2351,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_AES_C and MBEDTLS_CIPHER_C
  */
-//#define MBEDTLS_NIST_KW_C
+#define MBEDTLS_NIST_KW_C
 
 /**
  * \def MBEDTLS_MD_C
@@ -2384,7 +2384,7 @@ void mbedtls_platform_free( void * ptr );
  *            it, and considering stronger message digests instead.
  *
  */
-//#define MBEDTLS_MD5_C
+#define MBEDTLS_MD5_C
 
 /**
  * \def MBEDTLS_MEMORY_BUFFER_ALLOC_C
@@ -2548,7 +2548,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module adds support for the PKCS#5 functions.
  */
-//#define MBEDTLS_PKCS5_C
+#define MBEDTLS_PKCS5_C
 
 /**
  * \def MBEDTLS_PKCS12_C
@@ -2563,7 +2563,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module enables PKCS#12 functions.
  */
-//#define MBEDTLS_PKCS12_C
+#define MBEDTLS_PKCS12_C
 
 /**
  * \def MBEDTLS_PLATFORM_C
@@ -2593,7 +2593,7 @@ void mbedtls_platform_free( void * ptr );
  * Module:  library/poly1305.c
  * Caller:  library/chachapoly.c
  */
-//#define MBEDTLS_POLY1305_C
+#define MBEDTLS_POLY1305_C
 
 /**
  * \def MBEDTLS_PSA_CRYPTO_C
@@ -2682,7 +2682,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_BIGNUM_C, MBEDTLS_OID_C
  */
-//#define MBEDTLS_RSA_C
+#define MBEDTLS_RSA_C
 
 /**
  * \def MBEDTLS_SHA1_C
@@ -2793,7 +2793,7 @@ void mbedtls_platform_free( void * ptr );
  * Module:  library/ssl_cookie.c
  * Caller:
  */
-//#define MBEDTLS_SSL_COOKIE_C
+#define MBEDTLS_SSL_COOKIE_C
 
 /**
  * \def MBEDTLS_SSL_TICKET_C
@@ -2805,7 +2805,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * Requires: MBEDTLS_CIPHER_C
  */
-//#define MBEDTLS_SSL_TICKET_C
+#define MBEDTLS_SSL_TICKET_C
 
 /**
  * \def MBEDTLS_SSL_CLI_C
@@ -2951,7 +2951,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module is required for X.509 CRL parsing.
  */
-//#define MBEDTLS_X509_CRL_PARSE_C
+#define MBEDTLS_X509_CRL_PARSE_C
 
 /**
  * \def MBEDTLS_X509_CSR_PARSE_C
@@ -2965,7 +2965,7 @@ void mbedtls_platform_free( void * ptr );
  *
  * This module is used for reading X.509 certificate request.
  */
-//#define MBEDTLS_X509_CSR_PARSE_C
+#define MBEDTLS_X509_CSR_PARSE_C
 
 /**
  * \def MBEDTLS_X509_CREATE_C
diff --git a/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.cproject b/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.cproject
index c0c18f5..369a902 100644
--- a/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.cproject
+++ b/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.cproject
@@ -33,6 +33,9 @@
 								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.definedsymbols.717150467" name="Define symbols (-D)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.definedsymbols" valueType="definedSymbols">
 									<listOptionValue builtIn="false" value="DEBUG"/>
 								</option>
+								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.includepaths.1496602640" name="Include paths (-I)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.includepaths" valueType="includePath">
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/IoTConnect/iotc-freertos-sdk/smart-inc}&quot;"/>
+								</option>
 								<inputType id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.input.1840306049" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.input"/>
 							</tool>
 							<tool id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.321104050" name="MCU GCC Compiler" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler">
@@ -50,7 +53,6 @@
 									<listOptionValue builtIn="false" value="NOUSE_CUSTOM_TLS_KEY"/>
 								</option>
 								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.includepaths.356710838" name="Include paths (-I)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.includepaths" useByScannerDiscovery="false" valueType="includePath">
-									<listOptionValue builtIn="false" value="../../Inc"/>
 									<listOptionValue builtIn="false" value="../../../../../Drivers/STM32H5xx_HAL_Driver/Inc"/>
 									<listOptionValue builtIn="false" value="../../../../../Drivers/STM32H5xx_HAL_Driver/Inc/Legacy"/>
 									<listOptionValue builtIn="false" value="../../../../../Drivers/CMSIS/Device/ST/STM32H5xx/Include"/>
@@ -63,7 +65,9 @@
 									<listOptionValue builtIn="false" value="../../../../../Projects/Common/kvstore"/>
 									<listOptionValue builtIn="false" value="../../../../../Projects/Common/app/mqtt"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/mbedtls/include"/>
+									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/mbedtls/include/mbedtls"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/mbedtls/library"/>
+									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/littlefs"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/AWS/IoTDeviceDefender/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/AWS/IoTDeviceShadow/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/AWS/IoTJobs/source/include"/>
@@ -93,6 +97,9 @@
 									<listOptionValue builtIn="false" value="../../../../../Middlewares/ST/secure_manager_api/interface/inc"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/ota-pal-psa"/>
 									<listOptionValue builtIn="false" value="../../../../../Utilities/Certificates"/>
+									<listOptionValue builtIn="false" value="../../Inc"/>
+									<listOptionValue builtIn="false" value="../../../aws_eth/Src/fs/"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/IoTConnect/iotc-freertos-sdk/smart-inc}&quot;"/>
 								</option>
 								<option id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.warnings.missing_include_dirs.1695544786" name="Warn if a user-supplied include directory does not exist (-Wmissing-include-dirs)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.warnings.missing_include_dirs" useByScannerDiscovery="false" value="true" valueType="boolean"/>
 								<option id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.slow_flash_data.1473452715" name="Assume loading data from flash is slower than fetching instruction (-mslow-flash-data)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.slow_flash_data" useByScannerDiscovery="false" value="true" valueType="boolean"/>
diff --git a/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.project b/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.project
index 1516b0c..c8f8f91 100644
--- a/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.project
+++ b/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.project
@@ -32,6 +32,11 @@
 		<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>
 	</natures>
 	<linkedResources>
+		<link>
+			<name>IoTConnect</name>
+			<type>2</type>
+			<locationURI>PARENT-4-PROJECT_LOC/IoTConnect</locationURI>
+		</link>
 		<link>
 			<name>STM32H573I-DK_aws_eth_tz.ioc</name>
 			<type>1</type>
@@ -272,6 +277,26 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Utilities/Certificates/stm32_cert.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/littlefs/lfs.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/littlefs/lfs.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/littlefs/lfs_filebd.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/littlefs/bd/lfs_filebd.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/littlefs/lfs_rambd.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/littlefs/bd/lfs_rambd.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/littlefs/lfs_util.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/littlefs/lfs_util.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/aes.c</name>
 			<type>1</type>
@@ -307,6 +332,16 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/ccm.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/chacha20.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/chacha20.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/chachapoly.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/chachapoly.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/cipher.c</name>
 			<type>1</type>
@@ -337,6 +372,11 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/debug.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/des.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/des.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/dhm.c</name>
 			<type>1</type>
@@ -397,11 +437,21 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/md.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/md5.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/md5.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/memory_buffer_alloc.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/memory_buffer_alloc.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/nist_kw.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/nist_kw.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/oid.c</name>
 			<type>1</type>
@@ -427,6 +477,16 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pk_wrap.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/pkcs12.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkcs12.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/pkcs5.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkcs5.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/pkparse.c</name>
 			<type>1</type>
@@ -447,6 +507,11 @@
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/platform_util.c</locationURI>
 		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/poly1305.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/poly1305.c</locationURI>
+		</link>
 		<link>
 			<name>Middlewares/ARM/mbedtls/rsa.c</name>
 			<type>1</type>
diff --git a/Projects/STM32H573I-DK/aws_eth_tz/Src/app_main.c b/Projects/STM32H573I-DK/aws_eth_tz/Src/app_main.c
index 9a33d30..36e273e 100644
--- a/Projects/STM32H573I-DK/aws_eth_tz/Src/app_main.c
+++ b/Projects/STM32H573I-DK/aws_eth_tz/Src/app_main.c
@@ -37,10 +37,14 @@
 #include "psa/crypto.h"
 
 #include "cli.h"
+#include "lfs.h"
+#include "lfs_port.h"
 #include "test_execution_config.h"
 #include "semphr.h"
 #include "stdlib.h" /* rand() */
 
+#include "iotconnect_app.h"
+
 /* Definition for Qualification Test */
 #if ( DEVICE_ADVISOR_TEST_ENABLED == 1 ) || ( MQTT_TEST_ENABLED == 1 ) || ( TRANSPORT_INTERFACE_TEST_ENABLED == 1 ) || \
     ( OTA_PAL_TEST_ENABLED == 1 ) || ( OTA_E2E_TEST_ENABLED == 1 ) || ( CORE_PKCS11_TEST_ENABLED == 1 )
@@ -53,20 +57,92 @@
 
 #define SRAM3_NS_SIZE (128 * 1024)
 
+#ifdef IOTC_USE_LED
+volatile bool led_red_state   = true;
+volatile bool led_green_state = true;
+volatile int  led_freq_ms     = 1000;
+#endif
+
+static lfs_t * pxLfsCtx = NULL;
+
 EventGroupHandle_t xSystemEvents = NULL;
+#ifdef IOTC_USE_LED
+void set_led_red(bool state){
+    led_red_state = state;
+    HAL_GPIO_WritePin( LED_RED_GPIO_Port,   LED_RED_Pin,   (led_red_state)?   GPIO_PIN_RESET : GPIO_PIN_SET );
+}
+
+void set_led_green(bool state){
+    led_green_state = state;
+    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, (led_green_state)? GPIO_PIN_RESET : GPIO_PIN_SET);
+}
+
+void set_led_freq(int freq){
+    led_freq_ms = freq;
+}
+#endif // IOTC_USE_LED
+
+int iotc_process_cmd_str(IotclC2dEventData data, char* command){
+    int err=-1;
+    LogInfo("Received command: %s", command);
+
+    if(NULL != strcasestr(command, IOTC_CMD_PING)){
+        LogInfo("Ping Command Received!\n");
+#ifdef IOTC_USE_LED
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_RED)){
+        if (NULL != strcasestr(command, "on")) {
+            LogInfo("led-red on");
+            //BSP_LED_On(LED_RED);
+            set_led_red(true);
+        } else if (NULL != strcasestr(command, "off")) {
+            LogInfo("led-red off");
+            set_led_red(false);
+        } else {
+            LogWarn("Invalid led-red command received: %s", command);
+        }
+        err=0;
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_GREEN)) {
+        if (NULL != strcasestr(command, "on")) {
+            LogInfo("led-green on");
+            set_led_green(true);
+        } else if (NULL != strcasestr(command, "off")) {
+            LogInfo("led-green off");
+            set_led_green(false);
+        } else {
+            LogWarn("Invalid led-green command received: %s", command);
+        }
+        err=0;
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_FREQ)) {
+        // Get the int following the command
+        int led_freq = atoi(command + strlen(IOTC_CMD_LED_FREQ) + 1);
+        if (0 != led_freq){
+            set_led_freq(led_freq);
+        }
+#endif // IOTC_USE_LED
+    } else {
+        LogInfo("Command not recognized: %s", command);
+    }
+    return err;
+}
 
 static void vHeartbeatTask( void * pvParameters )
 {
     ( void ) pvParameters;
 
-    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, GPIO_PIN_RESET );
-    HAL_GPIO_WritePin( LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET );
+    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, (led_green_state)? GPIO_PIN_RESET : GPIO_PIN_SET);
+    HAL_GPIO_WritePin( LED_RED_GPIO_Port,   LED_RED_Pin,   (led_red_state)?   GPIO_PIN_RESET : GPIO_PIN_SET );
 
     while(1)
     {
-        vTaskDelay( pdMS_TO_TICKS( 1000 ) );
-        HAL_GPIO_TogglePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin );
-        HAL_GPIO_TogglePin( LED_RED_GPIO_Port, LED_RED_Pin );
+        vTaskDelay( pdMS_TO_TICKS( led_freq_ms ) );
+
+        if (led_red_state){
+            HAL_GPIO_TogglePin( LED_RED_GPIO_Port, LED_RED_Pin );
+        }
+
+        if (led_green_state){
+            HAL_GPIO_TogglePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin );
+        }
     }
 }
 
@@ -78,6 +154,7 @@ extern void vOTAUpdateTask( void * pvParam );
 extern void vDefenderAgentTask( void * );
 extern void vSensorDataPublishTask( void * pvParameters );
 extern void vShadowUpdateTask( void * pvParameters );
+extern void iotconnect_app( void * );
 #if DEMO_QUALIFICATION_TEST
 extern void run_qualification_main( void * );
 #endif /* DEMO_QUALIFICATION_TEST */
@@ -113,20 +190,26 @@ void vInitTask( void * pvArgs )
     xResult = xTaskCreate( run_qualification_main, "QualTest", 4096, NULL, 10, NULL );
     configASSERT( xResult == pdTRUE );
 #else
-    xResult = xTaskCreate( vMQTTAgentTask, "MQTTAgent", 1024, NULL, 10, NULL );
-    configASSERT( xResult == pdTRUE );
+    // xResult = xTaskCreate( vMQTTAgentTask, "MQTTAgent", 1024, NULL, 10, NULL );
+    // configASSERT( xResult == pdTRUE );
 
-    xResult = xTaskCreate( vOTAUpdateTask, "OTAUpdate", 512, NULL, tskIDLE_PRIORITY + 2, NULL );
-    configASSERT( xResult == pdTRUE );
+    // xResult = xTaskCreate( vOTAUpdateTask, "OTAUpdate", 512, NULL, tskIDLE_PRIORITY + 2, NULL );
+    // configASSERT( xResult == pdTRUE );
 
     xResult = xTaskCreate( vSensorPublishTask, "Sense", 512, NULL, 6, NULL );
     configASSERT( xResult == pdTRUE );
 
-    xResult = xTaskCreate( vShadowDeviceTask, "ShadowDevice", 512, NULL, 5, NULL );
-    configASSERT( xResult == pdTRUE );
+    // xResult = xTaskCreate( vShadowDeviceTask, "ShadowDevice", 512, NULL, 5, NULL );
+    // configASSERT( xResult == pdTRUE );
+
+    // xResult = xTaskCreate( vDefenderAgentTask, "AWSDefender", 512 , NULL, 5, NULL );
+    // configASSERT( xResult == pdTRUE );
 
-    xResult = xTaskCreate( vDefenderAgentTask, "AWSDefender", 512 , NULL, 5, NULL );
+    LogInfo("IOTC TZ RUNNING!");
+
+    xResult = xTaskCreate( iotconnect_app, "iotconnect_app", 4096, NULL, 5, NULL );
     configASSERT( xResult == pdTRUE );
+
 #endif /* DEMO_QUALIFICATION_TEST */
 
     while( 1 )
