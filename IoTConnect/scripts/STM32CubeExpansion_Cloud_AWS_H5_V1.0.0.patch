diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Middleware/ARM/mbedtls/include/mbedtls/mbedtls_config.h iotc-freertos-stm32-h5-nogit/Middleware/ARM/mbedtls/include/mbedtls/mbedtls_config.h
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Middleware/ARM/mbedtls/include/mbedtls/mbedtls_config.h	2023-08-11 10:33:38.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Middleware/ARM/mbedtls/include/mbedtls/mbedtls_config.h	2024-05-03 13:36:25.680622942 +0100
@@ -2112,7 +2112,7 @@
  *
  * Module:  library/chacha20.c
  */
-#define MBEDTLS_CHACHA20_C
+//#define MBEDTLS_CHACHA20_C
 
 /**
  * \def MBEDTLS_CHACHAPOLY_C
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/Common/app/emu_sensor_publish.c iotc-freertos-stm32-h5-nogit/Projects/Common/app/emu_sensor_publish.c
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/Common/app/emu_sensor_publish.c	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/Common/app/emu_sensor_publish.c	2024-05-03 13:36:36.536614610 +0100
@@ -58,6 +58,9 @@
 /* Telemetry inputs */
 #include "lwip/stats.h"
 
+#include "iotconnect_config.h"
+#include "iotconnect_telemetry.h"
+
 #define MQTT_PUBLISH_MAX_LEN                 ( 512 )
 #define MQTT_PUBLISH_TIME_BETWEEN_MS         ( 2000 )
 #define MQTT_PUBLISH_TOPIC                   "net_stats"
@@ -205,8 +208,34 @@
 }
 
 /*-----------------------------------------------------------*/
+#define APP_VERSION 			"00.00.01"		// Version string
+char *iotcApp_create_telemetry_json(IotclMessageHandle msg, const void * pToTelemetryStruct, size_t siz) {
+
+	const NetworkData_t * p;
+
+	if(siz != sizeof(const const NetworkData_t))
+		return '\0';
+
+	p = pToTelemetryStruct;
+	// Optional. The first time you create a data point, the current timestamp will be automatically added
+    // TelemetryAddWith* calls are only required if sending multiple data points in one packet.
+    iotcl_telemetry_add_with_iso_time(msg, NULL);
+
+    iotcl_telemetry_set_number(msg, "timer", (double)p->timer);
+    iotcl_telemetry_set_number(msg, "sent", (double)p->sent);
+    iotcl_telemetry_set_number(msg, "received", (double)p->received);
+
+    iotcl_telemetry_set_string(msg, "version", APP_VERSION);
 
+    const char* str = iotcl_create_serialized_string(msg, false);
 
+	if (str == NULL) {
+		LogInfo( "serialized_string is NULL");
+	}
+
+	iotcl_telemetry_destroy(msg);
+    return (char* )str;
+}
 
 void vSensorPublishTask( void * pvParameters )
 {
@@ -260,21 +289,26 @@
                                      "{ \"timer_s\": %ld, \"sent_p\": %ld, \"received_p\": %ld }",
                                      xData.timer, xData.sent, xData.received );
 
-            if( bytesWritten < MQTT_PUBLISH_MAX_LEN )
-            {
-                xResult = prvPublishAndWaitForAck( xAgentHandle,
-                                                   pcTopicString,
-                                                   payloadBuf,
-                                                   bytesWritten );
-            }
-            else if( bytesWritten > 0 )
-            {
-                LogError( "Not enough buffer space." );
-            }
-            else
-            {
-                LogError( "Printf call failed." );
-            }
+            size_t l = sizeof(NetworkData_t);
+            size_t s = xMessageBufferSend(iotcAppQueueTelemetry, &xData, l, 0xffff);
+            if(s != l)
+                LogError( "Error while writing to iotcAppQueueTelemetry." );
+
+//            if( bytesWritten < MQTT_PUBLISH_MAX_LEN )
+//            {
+//                xResult = prvPublishAndWaitForAck( xAgentHandle,
+//                                                   pcTopicString,
+//                                                   payloadBuf,
+//                                                   bytesWritten );
+//            }
+//            else if( bytesWritten > 0 )
+//            {
+//                LogError( "Not enough buffer space." );
+//            }
+//            else
+//            {
+//                LogError( "Printf call failed." );
+//            }
 
             if( xResult == pdTRUE )
             {
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/Common/app/mqtt/mqtt_agent_task.c iotc-freertos-stm32-h5-nogit/Projects/Common/app/mqtt/mqtt_agent_task.c
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/Common/app/mqtt/mqtt_agent_task.c	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/Common/app/mqtt/mqtt_agent_task.c	2024-05-03 13:36:36.548614602 +0100
@@ -27,7 +27,7 @@
  */
 
 #include "logging_levels.h"
-#define LOG_LEVEL    LOG_INFO
+#define LOG_LEVEL    LOG_DEBUG
 #include "logging.h"
 
 /* Standard includes. */
@@ -41,7 +41,6 @@
 #include "task.h"
 #include "event_groups.h"
 
-#include "kvstore.h"
 #include "mqtt_metrics.h"
 
 /* MQTT library includes. */
@@ -65,6 +64,10 @@
 #include "mbedtls_transport.h"
 #include "sys_evt.h"
 
+#include "iotconnect.h"
+#include "kvstore.h"
+#include "iotc_mqtt_client.h"
+
 /*-----------------------------------------------------------*/
 
 /**
@@ -163,6 +166,21 @@
 
 static MQTTAgentHandle_t xDefaultInstanceHandle = NULL;
 
+/*
+ * @brief Configuration settings passed for iotconnect_init().
+ */
+static struct IOTCMQTTConfig {
+	const char *host;
+	int port;
+	char *duid;
+	const char *sub_topic;
+	const char *pub_topic;
+	PkiObject_t root_ca_cert;
+	PkiObject_t client_certificate;
+	PkiObject_t private_key;
+} mqtt_config;
+
+
 /*-----------------------------------------------------------*/
 
 /**
@@ -555,8 +573,6 @@
     for( uint32_t ulSubIdx = 0; ulSubIdx < pxCtx->uxSubscriptionCount; ulSubIdx++ )
     {
         /* Update cached SubAck status */
-      if( pxReturnInfo->pSubackCodes != NULL )
-      {
         pxCtx->pxSubAckStatus[ ulSubIdx ] = pxReturnInfo->pSubackCodes[ ulSubIdx ];
 
         if( pxReturnInfo->pSubackCodes[ ulSubIdx ] == MQTTSubAckFailure )
@@ -579,11 +595,6 @@
                 }
             }
         }
-      }
-      else
-      {
-         ;// configASSERT(pxReturnInfo->pSubackCodes);
-      }
     }
 
     ( void ) xUnlockSubCtx( pxCtx );
@@ -681,6 +692,8 @@
 
     ( void ) packetId;
 
+    LogInfo("prvIncomingPublishCallback");
+
     configASSERT( pMqttAgentContext );
     configASSERT( pMqttAgentContext->pIncomingCallbackContext );
     configASSERT( pxPublishInfo );
@@ -876,17 +889,22 @@
         pxCtx->xConnectInfo.pPassword = NULL;
         pxCtx->xConnectInfo.passwordLength = 0U;
 
-        pxCtx->xConnectInfo.pClientIdentifier = KVStore_getStringHeap( CS_CORE_THING_NAME, &uxTempSize );
+        pxCtx->xConnectInfo.pClientIdentifier = mqtt_config.duid;
 
-        if( ( pxCtx->xConnectInfo.pClientIdentifier != NULL ) &&
-            ( uxTempSize > 0 ) &&
-            ( uxTempSize <= UINT16_MAX ) )
-        {
-            pxCtx->xConnectInfo.clientIdentifierLength = ( uint16_t ) uxTempSize;
+        if( pxCtx->xConnectInfo.pClientIdentifier != NULL ) {
+
+        	size_t device_id_len = strlen(pxCtx->xConnectInfo.pClientIdentifier);
+
+        	if (device_id_len > 0 && device_id_len <= UINT16_MAX) {
+        		pxCtx->xConnectInfo.clientIdentifierLength = ( uint16_t ) device_id_len;
+        	} else {
+                LogError( "Invalid device id length" );
+                xStatus = MQTTNoMemory;
+        	}
         }
         else
         {
-            LogError( "Invalid client identifier read from KVStore." );
+            LogError( "Invalid device id" );
             xStatus = MQTTNoMemory;
         }
     }
@@ -917,25 +935,24 @@
 
     if( xStatus == MQTTSuccess )
     {
-        pxCtx->pcMqttEndpoint = KVStore_getStringHeap( CS_CORE_MQTT_ENDPOINT,
-                                                       &( pxCtx->uxMqttEndpointLen ) );
+        pxCtx->pcMqttEndpoint = mqtt_config.host;
 
-        if( ( pxCtx->uxMqttEndpointLen == 0 ) ||
-            ( pxCtx->pcMqttEndpoint == NULL ) )
+//        pxCtx->pcMqttEndpoint = "ENDPOINT";
+        if( pxCtx->pcMqttEndpoint == NULL || strlen(pxCtx->pcMqttEndpoint) == 0)
         {
-            LogError( "Invalid mqtt endpoint read from KVStore." );
+            LogError( "Invalid mqtt endpoint." );
             xStatus = MQTTNoMemory;
         }
     }
 
     if( xStatus == MQTTSuccess )
     {
-        pxCtx->ulMqttPort = KVStore_getUInt32( CS_CORE_MQTT_PORT, &( xSuccess ) );
+        pxCtx->ulMqttPort = mqtt_config.port;
 
         if( ( pxCtx->ulMqttPort == 0 ) ||
             ( xSuccess == pdFALSE ) )
         {
-            LogError( "Invalid mqtt port number read from KVStore." );
+            LogError( "Invalid mqtt port number." );
             xStatus = MQTTNoMemory;
         }
     }
@@ -960,11 +977,41 @@
     return xDefaultInstanceHandle;
 }
 
+
+/* @brief	Set configuration parameters of MQTT client
+ *
+ */
+
+MQTTStatus_t vSetMQTTConfig( const char *host,
+						  int port,
+						  const char *duid,
+						  const char *sub_topic,
+						  const char *pub_topic,
+						  PkiObject_t root_ca_cert,
+						  PkiObject_t device_cert,
+						  PkiObject_t device_key)
+{
+	mqtt_config.host = host;
+	mqtt_config.port = port;
+	mqtt_config.duid = duid;
+	mqtt_config.sub_topic = sub_topic;
+	mqtt_config.pub_topic = pub_topic;
+	mqtt_config.root_ca_cert = root_ca_cert;
+	mqtt_config.client_certificate = device_cert;
+	mqtt_config.private_key = device_key;
+	return MQTTSuccess;
+}
+
+
 /*-----------------------------------------------------------*/
 
+extern void vLogCertInfo( mbedtls_x509_crt * pxCert, const char * pcMessage );
+
 void vMQTTAgentTask( void * pvParameters )
 {
-    MQTTStatus_t xMQTTStatus = MQTTSuccess;
+    ( void ) pvParameters;
+
+	MQTTStatus_t xMQTTStatus = MQTTSuccess;
     TlsTransportStatus_t xTlsStatus = TLS_TRANSPORT_CONNECT_FAILURE;
     BaseType_t xExitFlag = pdFALSE;
 
@@ -973,12 +1020,6 @@
     NetworkContext_t * pxNetworkContext = NULL;
     uint16_t usNextRetryBackOff = 0U;
 
-    PkiObject_t xPrivateKey = xPkiObjectFromLabel( TLS_KEY_PRV_LABEL );
-    PkiObject_t xClientCertificate = xPkiObjectFromLabel( TLS_CERT_LABEL );
-    PkiObject_t pxRootCaChain[ 1 ] = { xPkiObjectFromLabel( TLS_ROOT_CA_CERT_LABEL ) };
-
-    ( void ) pvParameters;
-
     /* Miscellaneous initialization. */
     ulGlobalEntryTimeMs = prvGetTimeMs();
 
@@ -1004,14 +1045,14 @@
 
     if( xMQTTStatus == MQTTSuccess )
     {
-          xTlsStatus = mbedtls_transport_configure( pxNetworkContext,
+        xTlsStatus = mbedtls_transport_configure( pxNetworkContext,
                                                   pcAlpnProtocols,
-                                                  &xPrivateKey,
-                                                  &xClientCertificate,
-                                                  pxRootCaChain,
+                                                  &mqtt_config.private_key,
+                                                  &mqtt_config.client_certificate,
+												  &mqtt_config.root_ca_cert,
                                                   1 );
 
-          if( xTlsStatus != TLS_TRANSPORT_SUCCESS )
+        if( xTlsStatus != TLS_TRANSPORT_SUCCESS )
         {
             LogError( "Failed to configure mbedtls transport." );
             xMQTTStatus = MQTTBadParameter;
@@ -1073,11 +1114,6 @@
             LogError( "Failed to configure socket recv ready callback." );
             xMQTTStatus = MQTTBadParameter;
         }
-        else
-        {
-            ( void ) xEventGroupSetBits( xSystemEvents, EVT_MASK_TLS_INIT );
-            xDefaultInstanceHandle = &( pxCtx->xAgentContext );
-        }
     }
 
     if( xMQTTStatus != MQTTSuccess )
@@ -1138,11 +1174,6 @@
                     xExitFlag = pdTRUE;
                 }
             }
-            else
-            {
-                ( void ) xEventGroupSetBits( xSystemEvents, EVT_MASK_TLS_CONNECTED );
-                xDefaultInstanceHandle = &( pxCtx->xAgentContext );
-            }
         }
 
         if( xTlsStatus == TLS_TRANSPORT_SUCCESS )
@@ -1191,6 +1222,31 @@
             else
             {
                 LogError( "Failed to connect to mqtt broker." );
+
+                if (MQTTRecvFailed == xMQTTStatus)
+                {
+                    char *thing_name = KVStore_getStringHeap(CS_CORE_THING_NAME, NULL);   // Device ID
+                    char subTopicString[MQTT_SUBSCRIBE_TOPIC_STR_LEN];
+                    char pubTopicString[MQTT_PUBLISH_TOPIC_STR_LEN];
+
+                    int lSubTopicLen = snprintf(subTopicString, ( size_t ) MQTT_SUBSCRIBE_TOPIC_STR_LEN, SUBSCRIBE_TOPIC_FORMAT, thing_name);
+                    if( ( lSubTopicLen <= 0 ) || ( lSubTopicLen > MQTT_SUBSCRIBE_TOPIC_STR_LEN) ) {
+                        LogError( "Error while constructing subscribe topic string." );
+                        vTaskDelete( NULL );
+                    }
+
+                    int lPubTopicLen = snprintf(pubTopicString, ( size_t ) MQTT_PUBLISH_TOPIC_STR_LEN, PUBLISH_TOPIC_FORMAT, thing_name);
+                    if( ( lPubTopicLen <= 0 ) || ( lPubTopicLen > MQTT_PUBLISH_TOPIC_STR_LEN) ) {
+                        LogError( "Error while constructing ack publsh topic string, len: %d.", lPubTopicLen );
+                        return -1;
+                    }
+
+                    LogWarn("MQTT_Connect returned with status: %s\n", MQTT_Status_strerror( xMQTTStatus ));
+                    LogInfo("Please check if your thing_name, MQTT endpoints, and topics.\n");
+                    LogDebug("thing_name: %s\n", thing_name);
+                    LogDebug("sub topic: %s\n", subTopicString);
+                    LogDebug("pub topic: %s\n", pubTopicString);
+                }
             }
 
             /* Further reconnects will include a session resume operation */
@@ -1229,7 +1285,6 @@
 
         mbedtls_transport_disconnect( pxNetworkContext );
 
-        ( void ) xEventGroupClearBits( xSystemEvents, EVT_MASK_TLS_CONNECTED );
         ( void ) xEventGroupClearBits( xSystemEvents, EVT_MASK_MQTT_CONNECTED );
 
         /* Wait for any subscription related calls to complete */
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/Common/config/kvstore_config.h iotc-freertos-stm32-h5-nogit/Projects/Common/config/kvstore_config.h
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/Common/config/kvstore_config.h	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/Common/config/kvstore_config.h	2024-05-03 13:36:36.572614583 +0100
@@ -39,6 +39,8 @@
     CS_WIFI_SSID,
     CS_WIFI_CREDENTIAL,
     CS_TIME_HWM_S_1970,
+    CS_IOTC_CPID,
+    CS_IOTC_ENV,
     CS_NUM_KEYS
 } KVStoreKey_t;
 
@@ -96,6 +98,14 @@
 #if !defined( WIFI_SECURITY_DFLT )
 #define WIFI_SECURITY_DFLT    ""
 #endif /* !defined ( WIFI_SECURITY_DFLT ) */
+
+#if !defined( IOTC_CPID_DFLT )
+#define IOTC_CPID_DFLT    ""
+#endif /* !defined ( IOTC_CPID_DFLT ) */
+
+#if !defined( IOTC_ENV_DFLT )
+#define IOTC_ENV_DFLT    ""
+#endif /* !defined ( IOTC_ENV_DFLT ) */
 /* -------------------------------- Values for common attributes -------------------------------- */
 
 /* Array to map between strings and KVStoreKey_t IDs */
@@ -106,7 +116,9 @@
         "mqtt_port",       \
         "wifi_ssid",       \
         "wifi_credential", \
-        "time_hwm"         \
+        "time_hwm",        \
+        "cpid",            \
+        "env"              \
     }
 
 #define KV_STORE_DEFAULTS                                                          \
@@ -117,6 +129,8 @@
         KV_DFLT( KV_TYPE_STRING, WIFI_SSID_DFLT ),     /* CS_WIFI_SSID */          \
         KV_DFLT( KV_TYPE_STRING, WIFI_PASSWORD_DFLT ), /* CS_WIFI_CREDENTIAL */    \
         KV_DFLT( KV_TYPE_UINT32, 0 ),                  /* CS_TIME_HWM_S_1970 */    \
+        KV_DFLT( KV_TYPE_STRING, IOTC_CPID_DFLT ), 	   /* CS_IOTC_CPID */          \
+        KV_DFLT( KV_TYPE_STRING, IOTC_ENV_DFLT ), 	   /* CS_IOTC_ENV */           \
     }
 
 #endif /* _KVSTORE_CONFIG_H */
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/Inc/mbedtls_config_ntz.h iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/Inc/mbedtls_config_ntz.h
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/Inc/mbedtls_config_ntz.h	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/Inc/mbedtls_config_ntz.h	2024-05-03 13:36:36.656614519 +0100
@@ -533,35 +533,35 @@
  *
  * Enable Cipher Block Chaining mode (CBC) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CBC
+#define MBEDTLS_CIPHER_MODE_CBC
 
 /**
  * \def MBEDTLS_CIPHER_MODE_CFB
  *
  * Enable Cipher Feedback mode (CFB) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CFB
+#define MBEDTLS_CIPHER_MODE_CFB
 
 /**
  * \def MBEDTLS_CIPHER_MODE_CTR
  *
  * Enable Counter Block Cipher mode (CTR) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CTR
+#define MBEDTLS_CIPHER_MODE_CTR
 
 /**
  * \def MBEDTLS_CIPHER_MODE_OFB
  *
  * Enable Output Feedback mode (OFB) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_OFB
+#define MBEDTLS_CIPHER_MODE_OFB
 
 /**
  * \def MBEDTLS_CIPHER_MODE_XTS
  *
  * Enable Xor-encrypt-xor with ciphertext stealing mode (XTS) for AES.
  */
-//#define MBEDTLS_CIPHER_MODE_XTS
+#define MBEDTLS_CIPHER_MODE_XTS
 
 /**
  * \def MBEDTLS_CIPHER_NULL_CIPHER
@@ -593,7 +593,7 @@
  *
  * Uncomment this macro to enable the NULL cipher and ciphersuites
  */
-//#define MBEDTLS_CIPHER_NULL_CIPHER
+#define MBEDTLS_CIPHER_NULL_CIPHER
 
 /**
  * \def MBEDTLS_CIPHER_PADDING_PKCS7
@@ -606,10 +606,10 @@
  *
  * Enable padding modes in the cipher layer.
  */
-//#define MBEDTLS_CIPHER_PADDING_PKCS7
-//#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
-//#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
-//#define MBEDTLS_CIPHER_PADDING_ZEROS
+#define MBEDTLS_CIPHER_PADDING_PKCS7
+#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
+#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
+#define MBEDTLS_CIPHER_PADDING_ZEROS
 
 /** \def MBEDTLS_CTR_DRBG_USE_128_BIT_KEY
  *
@@ -627,20 +627,20 @@
  * Comment macros to disable the curve and functions for it
  */
 /* Short Weierstrass curves (supporting ECP, ECDH, ECDSA) */
-//#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
 #define MBEDTLS_ECP_DP_SECP256R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
+#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
+#define MBEDTLS_ECP_DP_BP256R1_ENABLED
+#define MBEDTLS_ECP_DP_BP384R1_ENABLED
+#define MBEDTLS_ECP_DP_BP512R1_ENABLED
 //#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
-//#define MBEDTLS_ECP_DP_BP256R1_ENABLED
-//#define MBEDTLS_ECP_DP_BP384R1_ENABLED
-//#define MBEDTLS_ECP_DP_BP512R1_ENABLED
-/* Montgomery curves (supporting ECP) */
-//#define MBEDTLS_ECP_DP_CURVE25519_ENABLED
-//#define MBEDTLS_ECP_DP_CURVE448_ENABLED
+#define MBEDTLS_ECP_DP_CURVE25519_ENABLED
+#define MBEDTLS_ECP_DP_CURVE448_ENABLED
 
 /**
  * \def MBEDTLS_ECP_NIST_OPTIM
@@ -689,7 +689,7 @@
  *
  * Comment this macro to disable deterministic ECDSA.
  */
-//#define MBEDTLS_ECDSA_DETERMINISTIC
+#define MBEDTLS_ECDSA_DETERMINISTIC
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_PSK_ENABLED
@@ -804,7 +804,7 @@
  *      MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
  *      MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
  */
-//#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
@@ -836,7 +836,7 @@
  *             See dhm.h for more details.
  *
  */
-//#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
@@ -859,7 +859,7 @@
  *      MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
@@ -903,7 +903,7 @@
  *      MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
@@ -925,7 +925,7 @@
  *      MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED
@@ -958,7 +958,7 @@
  *
  * Disable if you only need to support RFC 5915 + 5480 key formats.
  */
-//#define MBEDTLS_PK_PARSE_EC_EXTENDED
+#define MBEDTLS_PK_PARSE_EC_EXTENDED
 
 /**
  * \def MBEDTLS_ERROR_STRERROR_DUMMY
@@ -982,7 +982,7 @@
  *
  * Requires: MBEDTLS_BIGNUM_C
  */
-//#define MBEDTLS_GENPRIME
+#define MBEDTLS_GENPRIME
 
 /**
  * \def MBEDTLS_FS_IO
@@ -1318,7 +1318,7 @@
  *
  * Uncomment to enable the Connection ID extension.
  */
-//#define MBEDTLS_SSL_DTLS_CONNECTION_ID
+#define MBEDTLS_SSL_DTLS_CONNECTION_ID
 
 /**
  * \def MBEDTLS_SSL_ASYNC_PRIVATE
@@ -1488,7 +1488,7 @@
  * Uncomment this macro to enable experimental and partial
  * functionality specific to TLS 1.3.
  */
-//#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
+#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
 
 /**
  * \def MBEDTLS_SSL_PROTO_DTLS
@@ -1501,7 +1501,7 @@
  *
  * Comment this macro to disable support for DTLS
  */
-//#define MBEDTLS_SSL_PROTO_DTLS
+#define MBEDTLS_SSL_PROTO_DTLS
 
 /**
  * \def MBEDTLS_SSL_ALPN
@@ -1525,7 +1525,7 @@
  *
  * Comment this to disable anti-replay in DTLS.
  */
-//#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
+#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
 
 /**
  * \def MBEDTLS_SSL_DTLS_HELLO_VERIFY
@@ -1543,7 +1543,7 @@
  *
  * Comment this to disable support for HelloVerifyRequest.
  */
-//#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
+#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
 
 /**
  * \def MBEDTLS_SSL_DTLS_SRTP
@@ -1574,7 +1574,7 @@
  *
  * Uncomment this to enable support for use_srtp extension.
  */
-//#define MBEDTLS_SSL_DTLS_SRTP
+#define MBEDTLS_SSL_DTLS_SRTP
 
 /**
  * \def MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
@@ -1590,7 +1590,7 @@
  *
  * Comment this to disable support for clients reusing the source port.
  */
-//#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
+#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
 
 /**
  * \def MBEDTLS_SSL_SESSION_TICKETS
@@ -1614,7 +1614,7 @@
  *
  * Comment this macro to disable support for key export
  */
-//#define MBEDTLS_SSL_EXPORT_KEYS
+#define MBEDTLS_SSL_EXPORT_KEYS
 
 /**
  * \def MBEDTLS_SSL_SERVER_NAME_INDICATION
@@ -1635,7 +1635,7 @@
  *
  * Requires: MBEDTLS_SSL_MAX_FRAGMENT_LENGTH
  */
-//#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
+#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
 
 /**
  * \def MBEDTLS_TEST_CONSTANT_FLOW_MEMSAN
@@ -1786,7 +1786,7 @@
  *
  * Uncomment to enable trusted certificate callbacks.
  */
-//#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
+#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
 
 /**
  * \def MBEDTLS_X509_REMOVE_INFO
@@ -1807,7 +1807,7 @@
  *
  * Comment this macro to disallow using RSASSA-PSS in certificates.
  */
-//#define MBEDTLS_X509_RSASSA_PSS_SUPPORT
+#define MBEDTLS_X509_RSASSA_PSS_SUPPORT
 /* \} name SECTION: mbed TLS feature support */
 
 /**
@@ -2082,7 +2082,7 @@
  * This module enables the AES-CCM ciphersuites, if other requisites are
  * enabled as well.
  */
-//#define MBEDTLS_CCM_C
+#define MBEDTLS_CCM_C
 
 /**
  * \def MBEDTLS_CHACHA20_C
@@ -2091,7 +2091,7 @@
  *
  * Module:  library/chacha20.c
  */
-//#define MBEDTLS_CHACHA20_C
+#define MBEDTLS_CHACHA20_C
 
 /**
  * \def MBEDTLS_CHACHAPOLY_C
@@ -2102,7 +2102,7 @@
  *
  * This module requires: MBEDTLS_CHACHA20_C, MBEDTLS_POLY1305_C
  */
-//#define MBEDTLS_CHACHAPOLY_C
+#define MBEDTLS_CHACHAPOLY_C
 
 /**
  * \def MBEDTLS_CIPHER_C
@@ -2182,7 +2182,7 @@
  * \warning   DES is considered a weak cipher and its use constitutes a
  *            security risk. We recommend considering stronger ciphers instead.
  */
-/*#define MBEDTLS_DES_C */
+#define MBEDTLS_DES_C
 
 /**
  * \def MBEDTLS_DHM_C
@@ -2203,7 +2203,7 @@
  *             See dhm.h for more details.
  *
  */
-//#define MBEDTLS_DHM_C
+#define MBEDTLS_DHM_C
 
 /**
  * \def MBEDTLS_ECDH_C
@@ -2324,7 +2324,7 @@
  * This module adds support for the Hashed Message Authentication Code
  * (HMAC)-based key derivation function (HKDF).
  */
-//#define MBEDTLS_HKDF_C
+#define MBEDTLS_HKDF_C
 
 /**
  * \def MBEDTLS_HMAC_DRBG_C
@@ -2338,7 +2338,7 @@
  *
  * Uncomment to enable the HMAC_DRBG random number geerator.
  */
-//#define MBEDTLS_HMAC_DRBG_C
+#define MBEDTLS_HMAC_DRBG_C
 
 /**
  * \def MBEDTLS_NIST_KW_C
@@ -2351,7 +2351,7 @@
  *
  * Requires: MBEDTLS_AES_C and MBEDTLS_CIPHER_C
  */
-//#define MBEDTLS_NIST_KW_C
+#define MBEDTLS_NIST_KW_C
 
 /**
  * \def MBEDTLS_MD_C
@@ -2384,7 +2384,7 @@
  *            it, and considering stronger message digests instead.
  *
  */
-//#define MBEDTLS_MD5_C
+#define MBEDTLS_MD5_C
 
 /**
  * \def MBEDTLS_MEMORY_BUFFER_ALLOC_C
@@ -2548,7 +2548,7 @@
  *
  * This module adds support for the PKCS#5 functions.
  */
-//#define MBEDTLS_PKCS5_C
+#define MBEDTLS_PKCS5_C
 
 /**
  * \def MBEDTLS_PKCS12_C
@@ -2563,7 +2563,7 @@
  *
  * This module enables PKCS#12 functions.
  */
-//#define MBEDTLS_PKCS12_C
+#define MBEDTLS_PKCS12_C
 
 /**
  * \def MBEDTLS_PLATFORM_C
@@ -2593,7 +2593,7 @@
  * Module:  library/poly1305.c
  * Caller:  library/chachapoly.c
  */
-//#define MBEDTLS_POLY1305_C
+#define MBEDTLS_POLY1305_C
 
 /**
  * \def MBEDTLS_PSA_CRYPTO_C
@@ -2793,7 +2793,7 @@
  * Module:  library/ssl_cookie.c
  * Caller:
  */
-//#define MBEDTLS_SSL_COOKIE_C
+#define MBEDTLS_SSL_COOKIE_C
 
 /**
  * \def MBEDTLS_SSL_TICKET_C
@@ -2805,7 +2805,7 @@
  *
  * Requires: MBEDTLS_CIPHER_C
  */
-//#define MBEDTLS_SSL_TICKET_C
+#define MBEDTLS_SSL_TICKET_C
 
 /**
  * \def MBEDTLS_SSL_CLI_C
@@ -2951,7 +2951,7 @@
  *
  * This module is required for X.509 CRL parsing.
  */
-//#define MBEDTLS_X509_CRL_PARSE_C
+#define MBEDTLS_X509_CRL_PARSE_C
 
 /**
  * \def MBEDTLS_X509_CSR_PARSE_C
@@ -2965,7 +2965,7 @@
  *
  * This module is used for reading X.509 certificate request.
  */
-//#define MBEDTLS_X509_CSR_PARSE_C
+#define MBEDTLS_X509_CSR_PARSE_C
 
 /**
  * \def MBEDTLS_X509_CREATE_C
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/Src/app_main.c iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/Src/app_main.c
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/Src/app_main.c	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/Src/app_main.c	2024-05-03 13:36:36.676614504 +0100
@@ -45,6 +45,8 @@
 
 #include "stdlib.h" /* rand() */
 
+#include "iotconnect_app.h"
+
 /* Definition for Qualification Test */
 #if ( DEVICE_ADVISOR_TEST_ENABLED == 1 ) || ( MQTT_TEST_ENABLED == 1 ) || ( TRANSPORT_INTERFACE_TEST_ENABLED == 1 ) || \
     ( OTA_PAL_TEST_ENABLED == 1 ) || ( OTA_E2E_TEST_ENABLED == 1 ) || ( CORE_PKCS11_TEST_ENABLED == 1 )
@@ -55,6 +57,12 @@
 #endif /* ( DEVICE_ADVISOR_TEST_ENABLED == 1 ) || ( MQTT_TEST_ENABLED == 1 ) || ( TRANSPORT_INTERFACE_TEST_ENABLED == 1 ) || \
         * ( OTA_PAL_TEST_ENABLED == 1 ) || ( OTA_E2E_TEST_ENABLED == 1 ) || ( CORE_PKCS11_TEST_ENABLED == 1 ) */
 
+#ifdef IOTC_USE_LED
+volatile bool led_red_state   = true;
+volatile bool led_green_state = true;
+volatile int  led_freq_ms     = 1000;
+#endif
+
 static lfs_t * pxLfsCtx = NULL;
 
 EventGroupHandle_t xSystemEvents = NULL;
@@ -132,18 +140,82 @@
     return err;
 }
 
+#ifdef IOTC_USE_LED
+void set_led_red(bool state){
+    led_red_state = state;
+    HAL_GPIO_WritePin( LED_RED_GPIO_Port,   LED_RED_Pin,   (led_red_state)?   GPIO_PIN_RESET : GPIO_PIN_SET );
+}
+
+void set_led_green(bool state){
+    led_green_state = state;
+    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, (led_green_state)? GPIO_PIN_RESET : GPIO_PIN_SET);
+}
+
+void set_led_freq(int freq){
+    led_freq_ms = freq;
+}
+#endif // IOTC_USE_LED
+
+void iotc_process_cmd_str(IotclEventData data, char* command){
+    LogInfo("Received command: %s", command);
+
+    if(NULL != strcasestr(command, IOTC_CMD_PING)){
+        LogInfo("Ping Command Received!\n");
+#ifdef IOTC_USE_LED
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_RED)){
+        if (NULL != strcasestr(command, "on")) {
+            LogInfo("led-red on");
+            //BSP_LED_On(LED_RED);
+            set_led_red(true);
+        } else if (NULL != strcasestr(command, "off")) {
+            LogInfo("led-red off");
+            set_led_red(false);
+        } else {
+            LogWarn("Invalid led-red command received: %s", command);
+        }
+        command_status(data, true, command, "OK");
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_GREEN)) {
+        if (NULL != strcasestr(command, "on")) {
+            LogInfo("led-green on");
+            set_led_green(true);
+        } else if (NULL != strcasestr(command, "off")) {
+            LogInfo("led-green off");
+            set_led_green(false);
+        } else {
+            LogWarn("Invalid led-green command received: %s", command);
+        }
+        command_status(data, true, command, "OK");
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_FREQ)) {
+        // Get the int following the command
+        int led_freq = atoi(command + strlen(IOTC_CMD_LED_FREQ) + 1);
+        if (0 != led_freq){
+            set_led_freq(led_freq);
+        }
+#endif // IOTC_USE_LED
+    } else {
+        LogInfo("Command not recognized: %s", command);
+        command_status(data, false, command, "Not implemented");
+    }
+}
+
 static void vHeartbeatTask( void * pvParameters )
 {
     ( void ) pvParameters;
 
-    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, GPIO_PIN_RESET );
-    HAL_GPIO_WritePin( LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET );
+    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, (led_green_state)? GPIO_PIN_RESET : GPIO_PIN_SET);
+    HAL_GPIO_WritePin( LED_RED_GPIO_Port,   LED_RED_Pin,   (led_red_state)?   GPIO_PIN_RESET : GPIO_PIN_SET );
 
     while(1)
     {
-        vTaskDelay( pdMS_TO_TICKS( 1000 ) );
-        HAL_GPIO_TogglePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin );
-        HAL_GPIO_TogglePin( LED_RED_GPIO_Port, LED_RED_Pin );
+        vTaskDelay( pdMS_TO_TICKS( led_freq_ms ) );
+
+        if (led_red_state){
+            HAL_GPIO_TogglePin( LED_RED_GPIO_Port, LED_RED_Pin );
+        }
+
+        if (led_green_state){
+            HAL_GPIO_TogglePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin );
+        }
     }
 }
 
@@ -155,6 +227,7 @@
 extern void vDefenderAgentTask( void * );
 extern void vSensorDataPublishTask( void * pvParameters );
 extern void vShadowUpdateTask( void * pvParameters );
+extern void iotconnect_app( void * );
 #if DEMO_QUALIFICATION_TEST
 extern void run_qualification_main( void * );
 #endif /* DEMO_QUALIFICATION_TEST */
@@ -205,20 +278,24 @@
     xResult = xTaskCreate( run_qualification_main, "QualTest", 4096, NULL, 10, NULL );
     configASSERT( xResult == pdTRUE );
 #else
-    xResult = xTaskCreate( vMQTTAgentTask, "MQTTAgent", 1024, NULL, 10, NULL );
-    configASSERT( xResult == pdTRUE );
+    //    xResult = xTaskCreate( vMQTTAgentTask, "MQTTAgent", 1024, NULL, 10, NULL );
+    //    configASSERT( xResult == pdTRUE );
+    //
+    //    xResult = xTaskCreate( vOTAUpdateTask, "OTAUpdate", 512, NULL, tskIDLE_PRIORITY + 1, NULL );
+    //    configASSERT( xResult == pdTRUE );
+    //
+        xResult = xTaskCreate( vSensorPublishTask, "Sense", 512, NULL, 6, NULL );
+        configASSERT( xResult == pdTRUE );
+
+    //    xResult = xTaskCreate( vShadowDeviceTask, "ShadowDevice", 512, NULL, 5, NULL );
+    //    configASSERT( xResult == pdTRUE );
+    //
+    //    xResult = xTaskCreate( vDefenderAgentTask, "AWSDefender", 512 , NULL, 5, NULL );
+    //    configASSERT( xResult == pdTRUE );
+        LogInfo("IOTC RUNNING\n");
 
-    xResult = xTaskCreate( vOTAUpdateTask, "OTAUpdate", 512, NULL, tskIDLE_PRIORITY + 1, NULL );
-    configASSERT( xResult == pdTRUE );
-
-    xResult = xTaskCreate( vSensorPublishTask, "Sense", 512, NULL, 6, NULL );
-    configASSERT( xResult == pdTRUE );
-
-    xResult = xTaskCreate( vShadowDeviceTask, "ShadowDevice", 512, NULL, 5, NULL );
-    configASSERT( xResult == pdTRUE );
-
-    xResult = xTaskCreate( vDefenderAgentTask, "AWSDefender", 512 , NULL, 5, NULL );
-    configASSERT( xResult == pdTRUE );
+        xResult = xTaskCreate( iotconnect_app, "iotconnect_app", 4096, NULL, 5, NULL );
+        configASSERT( xResult == pdTRUE );
 #endif /* DEMO_QUALIFICATION_TEST */
 
     while( 1 )
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.cproject iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.cproject
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.cproject	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.cproject	2024-05-03 13:36:36.684614497 +0100
@@ -34,6 +34,9 @@
 								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.definedsymbols.904588808" name="Define symbols (-D)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.definedsymbols" valueType="definedSymbols">
 									<listOptionValue builtIn="false" value="DEBUG"/>
 								</option>
+								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.includepaths.390563873" name="Include paths (-I)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.includepaths" valueType="includePath">
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/IoTConnect/iotc-freertos-sdk/smart-inc}&quot;"/>
+								</option>
 								<inputType id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.input.1287599341" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.input"/>
 							</tool>
 							<tool id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.736483198" name="MCU GCC Compiler" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler">
@@ -74,6 +77,7 @@
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/kernel/portable/GCC/ARM_CM33_NTZ/non_secure"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreJSON/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreMQTT/source/include"/>
+									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreHTTP/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreMQTT/source/interface"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/coreMQTT-Agent/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/FreeRTOS/corePKCS11/source/include"/>
@@ -94,6 +98,7 @@
 									<listOptionValue builtIn="false" value="../../Src/fs"/>
 									<listOptionValue builtIn="false" value="../../Src/ota_pal"/>
 									<listOptionValue builtIn="false" value="../../Inc"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/IoTConnect/iotc-freertos-sdk/smart-inc}&quot;"/>
 								</option>
 								<option id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.slow_flash_data.1546247664" name="Assume loading data from flash is slower than fetching instruction (-mslow-flash-data)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.slow_flash_data" useByScannerDiscovery="false" value="true" valueType="boolean"/>
 								<inputType id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.input.c.769522104" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.input.c"/>
@@ -120,6 +125,9 @@
 							<tool id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.objcopy.symbolsrec.1119651757" name="MCU Output Converter Motorola S-rec with symbols" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.objcopy.symbolsrec"/>
 						</toolChain>
 					</folderInfo>
+					<sourceEntries>
+						<entry excluding="my-middlewares|IotC-middlewares" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
+					</sourceEntries>
 				</configuration>
 			</storageModule>
 			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
@@ -140,5 +148,9 @@
 		</scannerConfigBuildInfo>
 	</storageModule>
 	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
-	<storageModule moduleId="refreshScope"/>
+	<storageModule moduleId="refreshScope" versionNumber="2">
+		<configuration configurationName="Debug">
+			<resource resourceType="PROJECT" workspacePath="/STM32H573I-DK_aws_eth"/>
+		</configuration>
+	</storageModule>
 </cproject>
\ No newline at end of file
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.project iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.project
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.project	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/.project	2024-05-03 13:36:36.684614497 +0100
@@ -33,6 +33,11 @@
 	</natures>
 	<linkedResources>
 		<link>
+			<name>IoTConnect</name>
+			<type>2</type>
+			<locationURI>PARENT-4-PROJECT_LOC/IoTConnect</locationURI>
+		</link>
+		<link>
 			<name>STM32H573I-DK_aws_eth.ioc</name>
 			<type>1</type>
 			<locationURI>PARENT-1-PROJECT_LOC/STM32H573I-DK_aws_eth.ioc</locationURI>
@@ -373,6 +378,16 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/ccm.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/chacha20.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/chacha20.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/chachapoly.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/chachapoly.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/cipher.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/cipher.c</locationURI>
@@ -403,6 +418,11 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/debug.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/des.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/des.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/dhm.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/dhm.c</locationURI>
@@ -463,11 +483,21 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/md.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/md5.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/md5.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/memory_buffer_alloc.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/memory_buffer_alloc.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/nist_kw.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/nist_kw.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/oid.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/oid.c</locationURI>
@@ -493,6 +523,16 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pk_wrap.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/pkcs12.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkcs12.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/pkcs5.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkcs5.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/pkparse.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkparse.c</locationURI>
@@ -513,6 +553,11 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/platform_util.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/poly1305.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/poly1305.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/rsa.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/rsa.c</locationURI>
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/STM32H573I-DK_aws_eth.launch iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/STM32H573I-DK_aws_eth.launch
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/STM32H573I-DK_aws_eth.launch	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/STM32H573I-DK_aws_eth.launch	2024-05-03 13:36:36.684614497 +0100
@@ -12,7 +12,7 @@
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.ip_address_local" value="localhost"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.launch.limit_swo_clock.enabled" value="false"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.limit_swo_clock.value" value=""/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.loadList" value="{&quot;fItems&quot;:[{&quot;fIsFromMainTab&quot;:true,&quot;fPath&quot;:&quot;Debug/aws_eth.elf&quot;,&quot;fProjectName&quot;:&quot;aws_eth&quot;,&quot;fPerformBuild&quot;:true,&quot;fDownload&quot;:true,&quot;fLoadSymbols&quot;:true}]}"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.loadList" value="{&quot;fItems&quot;:[{&quot;fIsFromMainTab&quot;:true,&quot;fPath&quot;:&quot;Debug/STM32H573I-DK_aws_eth.elf&quot;,&quot;fProjectName&quot;:&quot;STM32H573I-DK_aws_eth&quot;,&quot;fPerformBuild&quot;:true,&quot;fDownload&quot;:true,&quot;fLoadSymbols&quot;:true}]}"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.override_start_address_mode" value="default"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.remoteCommand" value="target remote"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.launch.startServer" value="true"/>
@@ -32,20 +32,20 @@
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.enable_shared_stlink" value="false"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.frequency" value="0"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.halt_all_on_reset" value="false"/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.log_file" value="S:\Projects\STM32H573I-DK\aws_eth\STM32CubeIDE\Debug\st-link_gdbserver_log.txt"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.log_file" value="/home/ylin/work/IoT/x-cube-aws-h5/Projects/STM32H573I-DK/aws_eth/STM32CubeIDE/Debug/st-link_gdbserver_log.txt"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.low_power_debug" value="enable"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.max_halt_delay" value="2"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.reset_strategy" value="connect_under_reset"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.stlink_check_serial_number" value="false"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.stlink_txt_serial_number" value=""/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.watchdog_config" value="none"/>
-    <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlinkenable_rtos" value="true"/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlinkrestart_configurations" value="{&quot;fVersion&quot;:1,&quot;fItems&quot;:[{&quot;fDisplayName&quot;:&quot;Reset&quot;,&quot;fIsSuppressible&quot;:false,&quot;fResetAttribute&quot;:&quot;Software system reset&quot;,&quot;fResetStrategies&quot;:[{&quot;fDisplayName&quot;:&quot;Software system reset&quot;,&quot;fLaunchAttribute&quot;:&quot;system_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset\r\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;Hardware reset&quot;,&quot;fLaunchAttribute&quot;:&quot;hardware_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset hardware\r\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;Core reset&quot;,&quot;fLaunchAttribute&quot;:&quot;core_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset core\r\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;None&quot;,&quot;fLaunchAttribute&quot;:&quot;no_reset&quot;,&quot;fGdbCommands&quot;:[],&quot;fCmdOptions&quot;:[&quot;-g&quot;]}],&quot;fGdbCommandGroup&quot;:{&quot;name&quot;:&quot;Additional commands&quot;,&quot;commands&quot;:[]},&quot;fStartApplication&quot;:true}]}"/>
-    <booleanAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.enableRtosProxy" value="true"/>
+    <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlinkenable_rtos" value="false"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlinkrestart_configurations" value="{&quot;fVersion&quot;:1,&quot;fItems&quot;:[{&quot;fDisplayName&quot;:&quot;Reset&quot;,&quot;fIsSuppressible&quot;:false,&quot;fResetAttribute&quot;:&quot;Software system reset&quot;,&quot;fResetStrategies&quot;:[{&quot;fDisplayName&quot;:&quot;Software system reset&quot;,&quot;fLaunchAttribute&quot;:&quot;system_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;Hardware reset&quot;,&quot;fLaunchAttribute&quot;:&quot;hardware_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset hardware\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;Core reset&quot;,&quot;fLaunchAttribute&quot;:&quot;core_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset core\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;None&quot;,&quot;fLaunchAttribute&quot;:&quot;no_reset&quot;,&quot;fGdbCommands&quot;:[],&quot;fCmdOptions&quot;:[&quot;-g&quot;]}],&quot;fGdbCommandGroup&quot;:{&quot;name&quot;:&quot;Additional commands&quot;,&quot;commands&quot;:[]},&quot;fStartApplication&quot;:true}]}"/>
+    <booleanAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.enableRtosProxy" value="false"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyCustomProperties" value=""/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriver" value="freertos"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriver" value="threadx"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriverAuto" value="false"/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriverPort" value="ARM_CM33_NTZ"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriverPort" value="cortex_m0"/>
     <intAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyPort" value="60000"/>
     <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.doHalt" value="false"/>
     <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.doReset" value="false"/>
@@ -67,13 +67,13 @@
     <stringAttribute key="org.eclipse.cdt.launch.DEBUGGER_START_MODE" value="remote"/>
     <booleanAttribute key="org.eclipse.cdt.launch.DEBUGGER_STOP_AT_MAIN" value="true"/>
     <stringAttribute key="org.eclipse.cdt.launch.DEBUGGER_STOP_AT_MAIN_SYMBOL" value="main"/>
-    <stringAttribute key="org.eclipse.cdt.launch.PROGRAM_NAME" value="Debug/aws_eth.elf"/>
-    <stringAttribute key="org.eclipse.cdt.launch.PROJECT_ATTR" value="aws_eth"/>
+    <stringAttribute key="org.eclipse.cdt.launch.PROGRAM_NAME" value="Debug/STM32H573I-DK_aws_eth.elf"/>
+    <stringAttribute key="org.eclipse.cdt.launch.PROJECT_ATTR" value="STM32H573I-DK_aws_eth"/>
     <booleanAttribute key="org.eclipse.cdt.launch.PROJECT_BUILD_CONFIG_AUTO_ATTR" value="true"/>
     <stringAttribute key="org.eclipse.cdt.launch.PROJECT_BUILD_CONFIG_ID_ATTR" value="com.st.stm32cube.ide.mcu.gnu.managedbuild.config.exe.debug.790736897"/>
     <booleanAttribute key="org.eclipse.debug.core.ATTR_FORCE_SYSTEM_CONSOLE_ENCODING" value="false"/>
     <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
-        <listEntry value="/aws_eth"/>
+        <listEntry value="/STM32H573I-DK_aws_eth"/>
     </listAttribute>
     <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
         <listEntry value="4"/>
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/Inc/mbedtls_config_psa.h iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/Inc/mbedtls_config_psa.h
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/Inc/mbedtls_config_psa.h	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/Inc/mbedtls_config_psa.h	2024-05-03 13:36:40.224611809 +0100
@@ -533,35 +533,35 @@
  *
  * Enable Cipher Block Chaining mode (CBC) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CBC
+#define MBEDTLS_CIPHER_MODE_CBC
 
 /**
  * \def MBEDTLS_CIPHER_MODE_CFB
  *
  * Enable Cipher Feedback mode (CFB) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CFB
+#define MBEDTLS_CIPHER_MODE_CFB
 
 /**
  * \def MBEDTLS_CIPHER_MODE_CTR
  *
  * Enable Counter Block Cipher mode (CTR) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_CTR
+#define MBEDTLS_CIPHER_MODE_CTR
 
 /**
  * \def MBEDTLS_CIPHER_MODE_OFB
  *
  * Enable Output Feedback mode (OFB) for symmetric ciphers.
  */
-//#define MBEDTLS_CIPHER_MODE_OFB
+#define MBEDTLS_CIPHER_MODE_OFB
 
 /**
  * \def MBEDTLS_CIPHER_MODE_XTS
  *
  * Enable Xor-encrypt-xor with ciphertext stealing mode (XTS) for AES.
  */
-//#define MBEDTLS_CIPHER_MODE_XTS
+#define MBEDTLS_CIPHER_MODE_XTS
 
 /**
  * \def MBEDTLS_CIPHER_NULL_CIPHER
@@ -593,7 +593,7 @@
  *
  * Uncomment this macro to enable the NULL cipher and ciphersuites
  */
-//#define MBEDTLS_CIPHER_NULL_CIPHER
+#define MBEDTLS_CIPHER_NULL_CIPHER
 
 /**
  * \def MBEDTLS_CIPHER_PADDING_PKCS7
@@ -606,10 +606,10 @@
  *
  * Enable padding modes in the cipher layer.
  */
-//#define MBEDTLS_CIPHER_PADDING_PKCS7
-//#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
-//#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
-//#define MBEDTLS_CIPHER_PADDING_ZEROS
+#define MBEDTLS_CIPHER_PADDING_PKCS7
+#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
+#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
+#define MBEDTLS_CIPHER_PADDING_ZEROS
 
 /** \def MBEDTLS_CTR_DRBG_USE_128_BIT_KEY
  *
@@ -627,20 +627,20 @@
  * Comment macros to disable the curve and functions for it
  */
 /* Short Weierstrass curves (supporting ECP, ECDH, ECDSA) */
-//#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
 #define MBEDTLS_ECP_DP_SECP256R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
-//#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
-//#define MBEDTLS_ECP_DP_BP256R1_ENABLED
-//#define MBEDTLS_ECP_DP_BP384R1_ENABLED
-//#define MBEDTLS_ECP_DP_BP512R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
+#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
+#define MBEDTLS_ECP_DP_BP256R1_ENABLED
+#define MBEDTLS_ECP_DP_BP384R1_ENABLED
+#define MBEDTLS_ECP_DP_BP512R1_ENABLED
 /* Montgomery curves (supporting ECP) */
-//#define MBEDTLS_ECP_DP_CURVE25519_ENABLED
-//#define MBEDTLS_ECP_DP_CURVE448_ENABLED
+#define MBEDTLS_ECP_DP_CURVE25519_ENABLED
+#define MBEDTLS_ECP_DP_CURVE448_ENABLED
 
 /**
  * \def MBEDTLS_ECP_NIST_OPTIM
@@ -689,7 +689,7 @@
  *
  * Comment this macro to disable deterministic ECDSA.
  */
-//#define MBEDTLS_ECDSA_DETERMINISTIC
+#define MBEDTLS_ECDSA_DETERMINISTIC
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_PSK_ENABLED
@@ -804,7 +804,7 @@
  *      MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
  *      MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
  */
-//#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
@@ -836,7 +836,7 @@
  *             See dhm.h for more details.
  *
  */
-//#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
@@ -859,7 +859,7 @@
  *      MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
@@ -903,7 +903,7 @@
  *      MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
@@ -925,7 +925,7 @@
  *      MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
  *      MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
  */
-//#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
+#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
 
 /**
  * \def MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED
@@ -958,7 +958,7 @@
  *
  * Disable if you only need to support RFC 5915 + 5480 key formats.
  */
-//#define MBEDTLS_PK_PARSE_EC_EXTENDED
+#define MBEDTLS_PK_PARSE_EC_EXTENDED
 
 /**
  * \def MBEDTLS_ERROR_STRERROR_DUMMY
@@ -982,7 +982,7 @@
  *
  * Requires: MBEDTLS_BIGNUM_C
  */
-//#define MBEDTLS_GENPRIME
+#define MBEDTLS_GENPRIME
 
 /**
  * \def MBEDTLS_FS_IO
@@ -1318,7 +1318,7 @@
  *
  * Uncomment to enable the Connection ID extension.
  */
-//#define MBEDTLS_SSL_DTLS_CONNECTION_ID
+#define MBEDTLS_SSL_DTLS_CONNECTION_ID
 
 /**
  * \def MBEDTLS_SSL_ASYNC_PRIVATE
@@ -1488,7 +1488,7 @@
  * Uncomment this macro to enable experimental and partial
  * functionality specific to TLS 1.3.
  */
-//#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
+#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
 
 /**
  * \def MBEDTLS_SSL_PROTO_DTLS
@@ -1501,7 +1501,7 @@
  *
  * Comment this macro to disable support for DTLS
  */
-//#define MBEDTLS_SSL_PROTO_DTLS
+#define MBEDTLS_SSL_PROTO_DTLS
 
 /**
  * \def MBEDTLS_SSL_ALPN
@@ -1525,7 +1525,7 @@
  *
  * Comment this to disable anti-replay in DTLS.
  */
-//#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
+#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
 
 /**
  * \def MBEDTLS_SSL_DTLS_HELLO_VERIFY
@@ -1543,7 +1543,7 @@
  *
  * Comment this to disable support for HelloVerifyRequest.
  */
-//#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
+#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
 
 /**
  * \def MBEDTLS_SSL_DTLS_SRTP
@@ -1574,7 +1574,7 @@
  *
  * Uncomment this to enable support for use_srtp extension.
  */
-//#define MBEDTLS_SSL_DTLS_SRTP
+#define MBEDTLS_SSL_DTLS_SRTP
 
 /**
  * \def MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
@@ -1590,7 +1590,7 @@
  *
  * Comment this to disable support for clients reusing the source port.
  */
-//#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
+#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
 
 /**
  * \def MBEDTLS_SSL_SESSION_TICKETS
@@ -1614,7 +1614,7 @@
  *
  * Comment this macro to disable support for key export
  */
-//#define MBEDTLS_SSL_EXPORT_KEYS
+#define MBEDTLS_SSL_EXPORT_KEYS
 
 /**
  * \def MBEDTLS_SSL_SERVER_NAME_INDICATION
@@ -1635,7 +1635,7 @@
  *
  * Requires: MBEDTLS_SSL_MAX_FRAGMENT_LENGTH
  */
-//#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
+#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
 
 /**
  * \def MBEDTLS_TEST_CONSTANT_FLOW_MEMSAN
@@ -1786,7 +1786,7 @@
  *
  * Uncomment to enable trusted certificate callbacks.
  */
-//#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
+#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
 
 /**
  * \def MBEDTLS_X509_REMOVE_INFO
@@ -1807,7 +1807,7 @@
  *
  * Comment this macro to disallow using RSASSA-PSS in certificates.
  */
-//#define MBEDTLS_X509_RSASSA_PSS_SUPPORT
+#define MBEDTLS_X509_RSASSA_PSS_SUPPORT
 /* \} name SECTION: mbed TLS feature support */
 
 /**
@@ -2082,7 +2082,7 @@
  * This module enables the AES-CCM ciphersuites, if other requisites are
  * enabled as well.
  */
-//#define MBEDTLS_CCM_C
+#define MBEDTLS_CCM_C
 
 /**
  * \def MBEDTLS_CHACHA20_C
@@ -2091,7 +2091,7 @@
  *
  * Module:  library/chacha20.c
  */
-//#define MBEDTLS_CHACHA20_C
+#define MBEDTLS_CHACHA20_C
 
 /**
  * \def MBEDTLS_CHACHAPOLY_C
@@ -2102,7 +2102,7 @@
  *
  * This module requires: MBEDTLS_CHACHA20_C, MBEDTLS_POLY1305_C
  */
-//#define MBEDTLS_CHACHAPOLY_C
+#define MBEDTLS_CHACHAPOLY_C
 
 /**
  * \def MBEDTLS_CIPHER_C
@@ -2182,7 +2182,7 @@
  * \warning   DES is considered a weak cipher and its use constitutes a
  *            security risk. We recommend considering stronger ciphers instead.
  */
-/*#define MBEDTLS_DES_C */
+#define MBEDTLS_DES_C 
 
 /**
  * \def MBEDTLS_DHM_C
@@ -2203,7 +2203,7 @@
  *             See dhm.h for more details.
  *
  */
-//#define MBEDTLS_DHM_C
+#define MBEDTLS_DHM_C
 
 /**
  * \def MBEDTLS_ECDH_C
@@ -2324,7 +2324,7 @@
  * This module adds support for the Hashed Message Authentication Code
  * (HMAC)-based key derivation function (HKDF).
  */
-//#define MBEDTLS_HKDF_C
+#define MBEDTLS_HKDF_C
 
 /**
  * \def MBEDTLS_HMAC_DRBG_C
@@ -2338,7 +2338,7 @@
  *
  * Uncomment to enable the HMAC_DRBG random number geerator.
  */
-//#define MBEDTLS_HMAC_DRBG_C
+#define MBEDTLS_HMAC_DRBG_C
 
 /**
  * \def MBEDTLS_NIST_KW_C
@@ -2351,7 +2351,7 @@
  *
  * Requires: MBEDTLS_AES_C and MBEDTLS_CIPHER_C
  */
-//#define MBEDTLS_NIST_KW_C
+#define MBEDTLS_NIST_KW_C
 
 /**
  * \def MBEDTLS_MD_C
@@ -2384,7 +2384,7 @@
  *            it, and considering stronger message digests instead.
  *
  */
-//#define MBEDTLS_MD5_C
+#define MBEDTLS_MD5_C
 
 /**
  * \def MBEDTLS_MEMORY_BUFFER_ALLOC_C
@@ -2548,7 +2548,7 @@
  *
  * This module adds support for the PKCS#5 functions.
  */
-//#define MBEDTLS_PKCS5_C
+#define MBEDTLS_PKCS5_C
 
 /**
  * \def MBEDTLS_PKCS12_C
@@ -2563,7 +2563,7 @@
  *
  * This module enables PKCS#12 functions.
  */
-//#define MBEDTLS_PKCS12_C
+#define MBEDTLS_PKCS12_C
 
 /**
  * \def MBEDTLS_PLATFORM_C
@@ -2593,7 +2593,7 @@
  * Module:  library/poly1305.c
  * Caller:  library/chachapoly.c
  */
-//#define MBEDTLS_POLY1305_C
+#define MBEDTLS_POLY1305_C
 
 /**
  * \def MBEDTLS_PSA_CRYPTO_C
@@ -2682,7 +2682,7 @@
  *
  * Requires: MBEDTLS_BIGNUM_C, MBEDTLS_OID_C
  */
-//#define MBEDTLS_RSA_C
+#define MBEDTLS_RSA_C
 
 /**
  * \def MBEDTLS_SHA1_C
@@ -2793,7 +2793,7 @@
  * Module:  library/ssl_cookie.c
  * Caller:
  */
-//#define MBEDTLS_SSL_COOKIE_C
+#define MBEDTLS_SSL_COOKIE_C
 
 /**
  * \def MBEDTLS_SSL_TICKET_C
@@ -2805,7 +2805,7 @@
  *
  * Requires: MBEDTLS_CIPHER_C
  */
-//#define MBEDTLS_SSL_TICKET_C
+#define MBEDTLS_SSL_TICKET_C
 
 /**
  * \def MBEDTLS_SSL_CLI_C
@@ -2951,7 +2951,7 @@
  *
  * This module is required for X.509 CRL parsing.
  */
-//#define MBEDTLS_X509_CRL_PARSE_C
+#define MBEDTLS_X509_CRL_PARSE_C
 
 /**
  * \def MBEDTLS_X509_CSR_PARSE_C
@@ -2965,7 +2965,7 @@
  *
  * This module is used for reading X.509 certificate request.
  */
-//#define MBEDTLS_X509_CSR_PARSE_C
+#define MBEDTLS_X509_CSR_PARSE_C
 
 /**
  * \def MBEDTLS_X509_CREATE_C
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/Src/app_main.c iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/Src/app_main.c
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/Src/app_main.c	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/Src/app_main.c	2024-05-03 13:36:40.244611794 +0100
@@ -37,10 +37,14 @@
 #include "psa/crypto.h"
 
 #include "cli.h"
+#include "lfs.h"
+#include "lfs_port.h"
 #include "test_execution_config.h"
 #include "semphr.h"
 #include "stdlib.h" /* rand() */
 
+#include "iotconnect_app.h"
+
 /* Definition for Qualification Test */
 #if ( DEVICE_ADVISOR_TEST_ENABLED == 1 ) || ( MQTT_TEST_ENABLED == 1 ) || ( TRANSPORT_INTERFACE_TEST_ENABLED == 1 ) || \
     ( OTA_PAL_TEST_ENABLED == 1 ) || ( OTA_E2E_TEST_ENABLED == 1 ) || ( CORE_PKCS11_TEST_ENABLED == 1 )
@@ -53,20 +57,91 @@
 
 #define SRAM3_NS_SIZE (128 * 1024)
 
+#ifdef IOTC_USE_LED
+volatile bool led_red_state   = true;
+volatile bool led_green_state = true;
+volatile int  led_freq_ms     = 1000;
+#endif
+
+static lfs_t * pxLfsCtx = NULL;
+
 EventGroupHandle_t xSystemEvents = NULL;
+#ifdef IOTC_USE_LED
+void set_led_red(bool state){
+    led_red_state = state;
+    HAL_GPIO_WritePin( LED_RED_GPIO_Port,   LED_RED_Pin,   (led_red_state)?   GPIO_PIN_RESET : GPIO_PIN_SET );
+}
+
+void set_led_green(bool state){
+    led_green_state = state;
+    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, (led_green_state)? GPIO_PIN_RESET : GPIO_PIN_SET);
+}
+
+void set_led_freq(int freq){
+    led_freq_ms = freq;
+}
+#endif // IOTC_USE_LED
+
+void iotc_process_cmd_str(IotclEventData data, char* command){
+    LogInfo("Received command: %s", command);
+
+    if(NULL != strcasestr(command, IOTC_CMD_PING)){
+        LogInfo("Ping Command Received!\n");
+#ifdef IOTC_USE_LED
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_RED)){
+        if (NULL != strcasestr(command, "on")) {
+            LogInfo("led-red on");
+            //BSP_LED_On(LED_RED);
+            set_led_red(true);
+        } else if (NULL != strcasestr(command, "off")) {
+            LogInfo("led-red off");
+            set_led_red(false);
+        } else {
+            LogWarn("Invalid led-red command received: %s", command);
+        }
+        command_status(data, true, command, "OK");
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_GREEN)) {
+        if (NULL != strcasestr(command, "on")) {
+            LogInfo("led-green on");
+            set_led_green(true);
+        } else if (NULL != strcasestr(command, "off")) {
+            LogInfo("led-green off");
+            set_led_green(false);
+        } else {
+            LogWarn("Invalid led-green command received: %s", command);
+        }
+        command_status(data, true, command, "OK");
+    } else if(NULL != strcasestr(command, IOTC_CMD_LED_FREQ)) {
+        // Get the int following the command
+        int led_freq = atoi(command + strlen(IOTC_CMD_LED_FREQ) + 1);
+        if (0 != led_freq){
+            set_led_freq(led_freq);
+        }
+#endif // IOTC_USE_LED
+    } else {
+        LogInfo("Command not recognized: %s", command);
+        command_status(data, false, command, "Not implemented");
+    }
+}
 
 static void vHeartbeatTask( void * pvParameters )
 {
     ( void ) pvParameters;
 
-    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, GPIO_PIN_RESET );
-    HAL_GPIO_WritePin( LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET );
+    HAL_GPIO_WritePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin, (led_green_state)? GPIO_PIN_RESET : GPIO_PIN_SET);
+    HAL_GPIO_WritePin( LED_RED_GPIO_Port,   LED_RED_Pin,   (led_red_state)?   GPIO_PIN_RESET : GPIO_PIN_SET );
 
     while(1)
     {
-        vTaskDelay( pdMS_TO_TICKS( 1000 ) );
-        HAL_GPIO_TogglePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin );
-        HAL_GPIO_TogglePin( LED_RED_GPIO_Port, LED_RED_Pin );
+        vTaskDelay( pdMS_TO_TICKS( led_freq_ms ) );
+
+        if (led_red_state){
+            HAL_GPIO_TogglePin( LED_RED_GPIO_Port, LED_RED_Pin );
+        }
+
+        if (led_green_state){
+            HAL_GPIO_TogglePin( LED_GREEN_GPIO_Port, LED_GREEN_Pin );
+        }
     }
 }
 
@@ -78,6 +153,7 @@
 extern void vDefenderAgentTask( void * );
 extern void vSensorDataPublishTask( void * pvParameters );
 extern void vShadowUpdateTask( void * pvParameters );
+extern void iotconnect_app( void * );
 #if DEMO_QUALIFICATION_TEST
 extern void run_qualification_main( void * );
 #endif /* DEMO_QUALIFICATION_TEST */
@@ -113,20 +189,26 @@
     xResult = xTaskCreate( run_qualification_main, "QualTest", 4096, NULL, 10, NULL );
     configASSERT( xResult == pdTRUE );
 #else
-    xResult = xTaskCreate( vMQTTAgentTask, "MQTTAgent", 1024, NULL, 10, NULL );
-    configASSERT( xResult == pdTRUE );
+    // xResult = xTaskCreate( vMQTTAgentTask, "MQTTAgent", 1024, NULL, 10, NULL );
+    // configASSERT( xResult == pdTRUE );
 
-    xResult = xTaskCreate( vOTAUpdateTask, "OTAUpdate", 512, NULL, tskIDLE_PRIORITY + 2, NULL );
-    configASSERT( xResult == pdTRUE );
+    // xResult = xTaskCreate( vOTAUpdateTask, "OTAUpdate", 512, NULL, tskIDLE_PRIORITY + 2, NULL );
+    // configASSERT( xResult == pdTRUE );
 
     xResult = xTaskCreate( vSensorPublishTask, "Sense", 512, NULL, 6, NULL );
     configASSERT( xResult == pdTRUE );
 
-    xResult = xTaskCreate( vShadowDeviceTask, "ShadowDevice", 512, NULL, 5, NULL );
-    configASSERT( xResult == pdTRUE );
+    // xResult = xTaskCreate( vShadowDeviceTask, "ShadowDevice", 512, NULL, 5, NULL );
+    // configASSERT( xResult == pdTRUE );
+
+    // xResult = xTaskCreate( vDefenderAgentTask, "AWSDefender", 512 , NULL, 5, NULL );
+    // configASSERT( xResult == pdTRUE );
 
-    xResult = xTaskCreate( vDefenderAgentTask, "AWSDefender", 512 , NULL, 5, NULL );
+    LogInfo("IOTC TZ RUNNING!");
+
+    xResult = xTaskCreate( iotconnect_app, "iotconnect_app", 4096, NULL, 5, NULL );
     configASSERT( xResult == pdTRUE );
+
 #endif /* DEMO_QUALIFICATION_TEST */
 
     while( 1 )
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.cproject iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.cproject
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.cproject	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.cproject	2024-05-03 13:36:40.248611791 +0100
@@ -33,6 +33,9 @@
 								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.definedsymbols.717150467" name="Define symbols (-D)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.definedsymbols" valueType="definedSymbols">
 									<listOptionValue builtIn="false" value="DEBUG"/>
 								</option>
+								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.includepaths.558616066" name="Include paths (-I)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.option.includepaths" valueType="includePath">
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/IoTConnect/iotc-freertos-sdk/smart-inc}&quot;"/>
+								</option>
 								<inputType id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.input.1840306049" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.assembler.input"/>
 							</tool>
 							<tool id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.321104050" name="MCU GCC Compiler" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler">
@@ -50,7 +53,6 @@
 									<listOptionValue builtIn="false" value="NOUSE_CUSTOM_TLS_KEY"/>
 								</option>
 								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.includepaths.356710838" name="Include paths (-I)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.includepaths" useByScannerDiscovery="false" valueType="includePath">
-									<listOptionValue builtIn="false" value="../../Inc"/>
 									<listOptionValue builtIn="false" value="../../../../../Drivers/STM32H5xx_HAL_Driver/Inc"/>
 									<listOptionValue builtIn="false" value="../../../../../Drivers/STM32H5xx_HAL_Driver/Inc/Legacy"/>
 									<listOptionValue builtIn="false" value="../../../../../Drivers/CMSIS/Device/ST/STM32H5xx/Include"/>
@@ -63,7 +65,9 @@
 									<listOptionValue builtIn="false" value="../../../../../Projects/Common/kvstore"/>
 									<listOptionValue builtIn="false" value="../../../../../Projects/Common/app/mqtt"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/mbedtls/include"/>
+									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/mbedtls/include/mbedtls"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/mbedtls/library"/>
+									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/littlefs"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/AWS/IoTDeviceDefender/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/AWS/IoTDeviceShadow/source/include"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/AWS/IoTJobs/source/include"/>
@@ -93,6 +97,9 @@
 									<listOptionValue builtIn="false" value="../../../../../Middlewares/ST/secure_manager_api/interface/inc"/>
 									<listOptionValue builtIn="false" value="../../../../../Middleware/ARM/ota-pal-psa"/>
 									<listOptionValue builtIn="false" value="../../../../../Utilities/Certificates"/>
+									<listOptionValue builtIn="false" value="../../Inc"/>
+									<listOptionValue builtIn="false" value="../../../aws_eth/Src/fs/"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/IoTConnect/iotc-freertos-sdk/smart-inc}&quot;"/>
 								</option>
 								<option id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.warnings.missing_include_dirs.1695544786" name="Warn if a user-supplied include directory does not exist (-Wmissing-include-dirs)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.warnings.missing_include_dirs" useByScannerDiscovery="false" value="true" valueType="boolean"/>
 								<option id="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.slow_flash_data.1473452715" name="Assume loading data from flash is slower than fetching instruction (-mslow-flash-data)" superClass="com.st.stm32cube.ide.mcu.gnu.managedbuild.tool.c.compiler.option.slow_flash_data" useByScannerDiscovery="false" value="true" valueType="boolean"/>
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.project iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.project
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.project	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/.project	2024-05-03 13:36:40.248611791 +0100
@@ -33,6 +33,11 @@
 	</natures>
 	<linkedResources>
 		<link>
+			<name>IoTConnect</name>
+			<type>2</type>
+			<locationURI>PARENT-4-PROJECT_LOC/IoTConnect</locationURI>
+		</link>
+		<link>
 			<name>STM32H573I-DK_aws_eth_tz.ioc</name>
 			<type>1</type>
 			<locationURI>PARENT-1-PROJECT_LOC/STM32H573I-DK_aws_eth_tz.ioc</locationURI>
@@ -273,6 +278,26 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Utilities/Certificates/stm32_cert.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/littlefs/lfs.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/littlefs/lfs.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/littlefs/lfs_filebd.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/littlefs/bd/lfs_filebd.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/littlefs/lfs_rambd.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/littlefs/bd/lfs_rambd.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/littlefs/lfs_util.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/littlefs/lfs_util.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/aes.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/aes.c</locationURI>
@@ -308,6 +333,16 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/ccm.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/chacha20.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/chacha20.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/chachapoly.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/chachapoly.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/cipher.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/cipher.c</locationURI>
@@ -338,6 +373,11 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/debug.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/des.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/des.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/dhm.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/dhm.c</locationURI>
@@ -398,11 +438,21 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/md.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/md5.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/md5.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/memory_buffer_alloc.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/memory_buffer_alloc.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/nist_kw.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/nist_kw.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/oid.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/oid.c</locationURI>
@@ -428,6 +478,16 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pk_wrap.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/pkcs12.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkcs12.c</locationURI>
+		</link>
+		<link>
+			<name>Middlewares/ARM/mbedtls/pkcs5.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkcs5.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/pkparse.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/pkparse.c</locationURI>
@@ -448,6 +508,11 @@
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/platform_util.c</locationURI>
 		</link>
 		<link>
+			<name>Middlewares/ARM/mbedtls/poly1305.c</name>
+			<type>1</type>
+			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/poly1305.c</locationURI>
+		</link>
+		<link>
 			<name>Middlewares/ARM/mbedtls/rsa.c</name>
 			<type>1</type>
 			<locationURI>PARENT-4-PROJECT_LOC/Middleware/ARM/mbedtls/library/rsa.c</locationURI>
diff --unified --recursive --no-dereference -X excluded-file-extensions.txt STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/STM32H573I-DK_aws_eth_tz.launch iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/STM32H573I-DK_aws_eth_tz.launch
--- STM32CubeExpansion_Cloud_AWS_H5_V1.0.0/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/STM32H573I-DK_aws_eth_tz.launch	2023-08-11 10:29:12.000000000 +0100
+++ iotc-freertos-stm32-h5-nogit/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/STM32H573I-DK_aws_eth_tz.launch	2024-05-03 13:36:40.248611791 +0100
@@ -12,7 +12,7 @@
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.ip_address_local" value="localhost"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.launch.limit_swo_clock.enabled" value="false"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.limit_swo_clock.value" value=""/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.loadList" value="{&quot;fItems&quot;:[{&quot;fIsFromMainTab&quot;:true,&quot;fPath&quot;:&quot;Debug/STM32H573I-DK_aws_eth_tz.elf&quot;,&quot;fProjectName&quot;:&quot;STM32H573I-DK_aws_eth_tz&quot;,&quot;fPerformBuild&quot;:true,&quot;fDownload&quot;:false,&quot;fLoadSymbols&quot;:true}]}"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.loadList" value="{&quot;fItems&quot;:[{&quot;fIsFromMainTab&quot;:true,&quot;fPath&quot;:&quot;Debug/STM32H573I-DK_aws_eth_tz.elf&quot;,&quot;fProjectName&quot;:&quot;STM32H573I-DK_aws_eth_tz&quot;,&quot;fPerformBuild&quot;:true,&quot;fDownload&quot;:true,&quot;fLoadSymbols&quot;:true}]}"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.override_start_address_mode" value="default"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.remoteCommand" value="target remote"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.launch.startServer" value="true"/>
@@ -24,7 +24,7 @@
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.swv_trace_hclk" value="250000000"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.launch.useRemoteTarget" value="true"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.launch.vector_table" value=""/>
-    <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.launch.verify_flash_download" value="false"/>
+    <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.launch.verify_flash_download" value="true"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.cti_allow_halt" value="false"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.cti_signal_halt" value="false"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.enable_logging" value="false"/>
@@ -32,20 +32,20 @@
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.enable_shared_stlink" value="false"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.frequency" value="0"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.halt_all_on_reset" value="false"/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.log_file" value="S:\Projects\STM32H573I-DK\aws_eth_tz\STM32CubeIDE\Debug\st-link_gdbserver_log.txt"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.log_file" value="/home/ylin/work/IoT/x-cube-aws-h5/Projects/STM32H573I-DK/aws_eth_tz/STM32CubeIDE/Debug/st-link_gdbserver_log.txt"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.low_power_debug" value="enable"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.max_halt_delay" value="2"/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.reset_strategy" value="no_reset"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.reset_strategy" value="system_reset"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.stlink_check_serial_number" value="false"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.stlink_txt_serial_number" value=""/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlink.watchdog_config" value="none"/>
-    <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlinkenable_rtos" value="true"/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlinkrestart_configurations" value="{&quot;fVersion&quot;:1,&quot;fItems&quot;:[{&quot;fDisplayName&quot;:&quot;Reset&quot;,&quot;fIsSuppressible&quot;:false,&quot;fResetAttribute&quot;:&quot;Software system reset&quot;,&quot;fResetStrategies&quot;:[{&quot;fDisplayName&quot;:&quot;Software system reset&quot;,&quot;fLaunchAttribute&quot;:&quot;system_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset\r\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;Hardware reset&quot;,&quot;fLaunchAttribute&quot;:&quot;hardware_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset hardware\r\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;Core reset&quot;,&quot;fLaunchAttribute&quot;:&quot;core_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset core\r\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;None&quot;,&quot;fLaunchAttribute&quot;:&quot;no_reset&quot;,&quot;fGdbCommands&quot;:[],&quot;fCmdOptions&quot;:[&quot;-g&quot;]}],&quot;fGdbCommandGroup&quot;:{&quot;name&quot;:&quot;Additional commands&quot;,&quot;commands&quot;:[]},&quot;fStartApplication&quot;:true}]}"/>
-    <booleanAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.enableRtosProxy" value="true"/>
+    <booleanAttribute key="com.st.stm32cube.ide.mcu.debug.stlinkenable_rtos" value="false"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.debug.stlinkrestart_configurations" value="{&quot;fVersion&quot;:1,&quot;fItems&quot;:[{&quot;fDisplayName&quot;:&quot;Reset&quot;,&quot;fIsSuppressible&quot;:false,&quot;fResetAttribute&quot;:&quot;Software system reset&quot;,&quot;fResetStrategies&quot;:[{&quot;fDisplayName&quot;:&quot;Software system reset&quot;,&quot;fLaunchAttribute&quot;:&quot;system_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;Hardware reset&quot;,&quot;fLaunchAttribute&quot;:&quot;hardware_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset hardware\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;Core reset&quot;,&quot;fLaunchAttribute&quot;:&quot;core_reset&quot;,&quot;fGdbCommands&quot;:[&quot;monitor reset core\n&quot;],&quot;fCmdOptions&quot;:[&quot;-g&quot;]},{&quot;fDisplayName&quot;:&quot;None&quot;,&quot;fLaunchAttribute&quot;:&quot;no_reset&quot;,&quot;fGdbCommands&quot;:[],&quot;fCmdOptions&quot;:[&quot;-g&quot;]}],&quot;fGdbCommandGroup&quot;:{&quot;name&quot;:&quot;Additional commands&quot;,&quot;commands&quot;:[]},&quot;fStartApplication&quot;:true}]}"/>
+    <booleanAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.enableRtosProxy" value="false"/>
     <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyCustomProperties" value=""/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriver" value="freertos"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriver" value="threadx"/>
     <booleanAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriverAuto" value="false"/>
-    <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriverPort" value="ARM_CM33_NTZ"/>
+    <stringAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyDriverPort" value="cortex_m0"/>
     <intAttribute key="com.st.stm32cube.ide.mcu.rtosproxy.rtosProxyPort" value="60000"/>
     <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.doHalt" value="false"/>
     <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.doReset" value="false"/>
@@ -54,7 +54,7 @@
     <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.jtagDeviceId" value="com.st.stm32cube.ide.mcu.debug.stlink"/>
     <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.pcRegister" value=""/>
     <intAttribute key="org.eclipse.cdt.debug.gdbjtag.core.portNumber" value="61234"/>
-    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.runCommands" value="set breakpoint always-inserted on&#13;&#10;tbreak Reset_Handler&#13;&#10;monitor reset&#13;&#10;set breakpoint always-inserted off&#13;&#10;si"/>
+    <stringAttribute key="org.eclipse.cdt.debug.gdbjtag.core.runCommands" value=""/>
     <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.setPcRegister" value="false"/>
     <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.setResume" value="true"/>
     <booleanAttribute key="org.eclipse.cdt.debug.gdbjtag.core.setStopAt" value="true"/>
@@ -62,7 +62,7 @@
     <stringAttribute key="org.eclipse.cdt.dsf.gdb.DEBUG_NAME" value="arm-none-eabi-gdb"/>
     <booleanAttribute key="org.eclipse.cdt.dsf.gdb.NON_STOP" value="false"/>
     <booleanAttribute key="org.eclipse.cdt.dsf.gdb.UPDATE_THREADLIST_ON_SUSPEND" value="false"/>
-    <intAttribute key="org.eclipse.cdt.launch.ATTR_BUILD_BEFORE_LAUNCH_ATTR" value="0"/>
+    <intAttribute key="org.eclipse.cdt.launch.ATTR_BUILD_BEFORE_LAUNCH_ATTR" value="2"/>
     <stringAttribute key="org.eclipse.cdt.launch.COREFILE_PATH" value=""/>
     <stringAttribute key="org.eclipse.cdt.launch.DEBUGGER_START_MODE" value="remote"/>
     <booleanAttribute key="org.eclipse.cdt.launch.DEBUGGER_STOP_AT_MAIN" value="true"/>
